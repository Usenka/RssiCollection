<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="62:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x767bd980"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x768d99b8"/></to>
    </wire>
    <wire loc="72:../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x768d99b8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x768d7838"/></to>
    </wire>
    <wire loc="64:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x767c4270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x766600a0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x766600a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x76659190"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x767c3600"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7656fe00"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7656fe00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x76659190"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x767c0958"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7656cbd0"/></to>
    </wire>
    <wire loc="52:../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7656cbd0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x76659190"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x767b6d10"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x768dade8"/></to>
    </wire>
    <wire loc="51:../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x768dade8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x767ae4b8"/></to>
    </wire>
    <wire loc="53:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x768d55f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x76657a08"/></to>
    </wire>
    <wire loc="67:../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x768d7bd0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x76b76a78"/></to>
    </wire>
    <wire loc="53:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x76b76a78"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x768fc9f0"/></to>
    </wire>
    <wire loc="68:../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x767db240"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x768d5ea0"/></to>
    </wire>
    <wire loc="48:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x768d5ea0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x768d48a0"/></to>
    </wire>
    <wire loc="71:../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x767db648"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x768d55f0"/></to>
    </wire>
    <wire loc="49:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x768d4cb0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x768c1d18"/></to>
    </wire>
    <wire loc="46:../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x768c1d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x768c0588"/></to>
    </wire>
    <wire loc="50:../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x768d10b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x768cfe78"/></to>
    </wire>
    <wire loc="56:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x768d1498"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x767971a0"/></to>
    </wire>
    <wire loc="46:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x768c0588"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x768af010"/></to>
    </wire>
    <wire loc="47:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x768b9c28"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x768af3e0"/></to>
    </wire>
    <wire loc="48:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x768e6600"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x768afde0"/></to>
    </wire>
    <wire loc="113:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7688b2a8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7681a050"/></to>
    </wire>
    <wire loc="126:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7687d090"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x76816e78"/></to>
    </wire>
    <wire loc="108:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x76882168"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7681d350"/></to>
    </wire>
    <wire loc="149:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x768735f8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x76808be8"/></to>
    </wire>
    <wire loc="107:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x76887278"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7681eb98"/></to>
    </wire>
    <wire loc="148:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x76877a38"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x76808510"/></to>
    </wire>
    <wire loc="170:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x76871090"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x767fbb08"/></to>
    </wire>
    <wire loc="154:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7687a010"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x768058f8"/></to>
    </wire>
    <wire loc="99:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x76888ac8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x768492c8"/></to>
    </wire>
    <wire loc="135:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x76874438"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x76811e88"/></to>
    </wire>
    <wire loc="134:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x76878a38"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x768117b0"/></to>
    </wire>
    <wire loc="133:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7687dc00"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x76812cb8"/></to>
    </wire>
    <wire loc="115:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x76882a08"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x76818198"/></to>
    </wire>
    <wire loc="156:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x76873e98"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x76804b08"/></to>
    </wire>
    <wire loc="140:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7687c8c8"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7680eb00"/></to>
    </wire>
    <wire loc="114:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x76887a38"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7681aaa8"/></to>
    </wire>
    <wire loc="93:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7688de98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7686e218"/></to>
    </wire>
    <wire loc="155:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x76876278"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x76804430"/></to>
    </wire>
    <wire loc="106:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x76890708"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7681e140"/></to>
    </wire>
    <wire loc="161:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7687ab80"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x768018f8"/></to>
    </wire>
    <wire loc="101:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7687e8b0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x76821430"/></to>
    </wire>
    <wire loc="142:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x76874cd8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7680dcc8"/></to>
    </wire>
    <wire loc="100:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x768839e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x76849d20"/></to>
    </wire>
    <wire loc="141:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x76877278"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7680d5f0"/></to>
    </wire>
    <wire loc="163:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x76872788"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x76800b08"/></to>
    </wire>
    <wire loc="147:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7687b468"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x76809a20"/></to>
    </wire>
    <wire loc="120:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x76881320"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7684ebd0"/></to>
    </wire>
    <wire loc="162:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x76876a38"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x76800430"/></to>
    </wire>
    <wire loc="128:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x76875b38"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x76814010"/></to>
    </wire>
    <wire loc="169:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x76875278"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x767fb430"/></to>
    </wire>
    <wire loc="127:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x76878278"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x768158f0"/></to>
    </wire>
    <wire loc="168:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x76879708"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x767fc8f8"/></to>
    </wire>
    <wire loc="94:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x76851240"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7686eec8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x76851598"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x767f8558"/></to>
    </wire>
    <wire loc="96:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x768518f0"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x767f89e0"/></to>
    </wire>
    <wire loc="102:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x76821be8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7686e218"/></to>
    </wire>
    <wire loc="103:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x76820890"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7686eec8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7681db08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7686e218"/></to>
    </wire>
    <wire loc="110:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7681c7b0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7686eec8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x76818950"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7686e218"/></to>
    </wire>
    <wire loc="117:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x768175f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7686eec8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7684dc90"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7684d928"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7684c010"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x767f8e68"/></to>
    </wire>
    <wire loc="123:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7684c368"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x767f5300"/></to>
    </wire>
    <wire loc="129:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x768147c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7684ebd0"/></to>
    </wire>
    <wire loc="130:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x76813430"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7684d928"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x76810650"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7684ebd0"/></to>
    </wire>
    <wire loc="137:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7680f278"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7684d928"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7680b510"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7684ebd0"/></to>
    </wire>
    <wire loc="144:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7680a190"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7684d928"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x76807430"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7684ebd0"/></to>
    </wire>
    <wire loc="151:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x76806080"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7684d928"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x76803350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7684ebd0"/></to>
    </wire>
    <wire loc="158:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x76802010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7684d928"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x767ff350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7684ebd0"/></to>
    </wire>
    <wire loc="165:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x767fe010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7684d928"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x767fa350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7684ebd0"/></to>
    </wire>
    <wire loc="172:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x767f9010"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7684d928"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x76b772b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x768fb238"/></to>
    </wire>
    <wire loc="55:../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x768fbe90"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x76b75948"/></to>
    </wire>
    <wire loc="53:../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x767971a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x767ae170"/></to>
    </wire>
    <wire loc="54:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x767a8370"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x767b02d8"/></to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x767b02d8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x766752d0"/></to>
    </wire>
    <wire loc="55:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x767a8d58"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x767b0ce0"/></to>
    </wire>
    <wire loc="61:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x767b0ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7666aa70"/></to>
    </wire>
    <wire loc="56:../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x767ac820"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x76798760"/></to>
    </wire>
    <wire loc="64:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x76798760"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x766662a0"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x76675c48"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x76765368"/></to>
    </wire>
    <wire loc="486:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x76765368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766c7d68"/></to>
    </wire>
    <wire loc="62:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x76668430"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x767644c8"/></to>
    </wire>
    <wire loc="487:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x767644c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766c45f8"/></to>
    </wire>
    <wire loc="65:../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x76666c18"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x76763688"/></to>
    </wire>
    <wire loc="488:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x76763688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766c1d68"/></to>
    </wire>
    <wire loc="442:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7678aae8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76718148"/></to>
    </wire>
    <wire loc="455:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7677fbc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766ffd68"/></to>
    </wire>
    <wire loc="531:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x76756d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766f75f8"/></to>
    </wire>
    <wire loc="551:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x76742ad8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766add68"/></to>
    </wire>
    <wire loc="532:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x76754010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766f5d68"/></to>
    </wire>
    <wire loc="460:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7677c010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766fad68"/></to>
    </wire>
    <wire loc="473:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x76771178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766e0d68"/></to>
    </wire>
    <wire loc="497:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7675c178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766b2d68"/></to>
    </wire>
    <wire loc="535:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x767513e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766f0d68"/></to>
    </wire>
    <wire loc="545:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x76748168"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766bcd68"/></to>
    </wire>
    <wire loc="557:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7673c170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766aa5f8"/></to>
    </wire>
    <wire loc="445:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x76786010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76711730"/></to>
    </wire>
    <wire loc="536:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x767505a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766ed5f8"/></to>
    </wire>
    <wire loc="450:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x76784368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7670c5f8"/></to>
    </wire>
    <wire loc="463:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x767794c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766f25f8"/></to>
    </wire>
    <wire loc="476:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7676e688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766d85f8"/></to>
    </wire>
    <wire loc="489:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x76762848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766be5f8"/></to>
    </wire>
    <wire loc="500:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x76759688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766aa5f8"/></to>
    </wire>
    <wire loc="440:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x76793768"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7671d220"/></to>
    </wire>
    <wire loc="453:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x76781848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76705de8"/></to>
    </wire>
    <wire loc="466:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x76776a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766ebd68"/></to>
    </wire>
    <wire loc="530:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x76757bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766f75f8"/></to>
    </wire>
    <wire loc="548:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x76745598"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766b45f8"/></to>
    </wire>
    <wire loc="555:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7673d010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766aa5f8"/></to>
    </wire>
    <wire loc="541:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7674cca0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766c95f8"/></to>
    </wire>
    <wire loc="471:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x76774d88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766e6e68"/></to>
    </wire>
    <wire loc="484:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x76768010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766ccd68"/></to>
    </wire>
    <wire loc="495:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7675fd88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766b7d68"/></to>
    </wire>
    <wire loc="549:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x76744758"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766b2d68"/></to>
    </wire>
    <wire loc="538:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7674f758"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766d1d68"/></to>
    </wire>
    <wire loc="443:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x76789ca8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x767168a0"/></to>
    </wire>
    <wire loc="456:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7677ed88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766fc5f8"/></to>
    </wire>
    <wire loc="493:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x76761a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766bcd68"/></to>
    </wire>
    <wire loc="461:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7677b178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766f75f8"/></to>
    </wire>
    <wire loc="474:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x76770368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766dd5f8"/></to>
    </wire>
    <wire loc="498:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7675b368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766af5f8"/></to>
    </wire>
    <wire loc="540:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7674dae0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766ccd68"/></to>
    </wire>
    <wire loc="438:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7678d3c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x767383a8"/></to>
    </wire>
    <wire loc="451:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x767834c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7670ad68"/></to>
    </wire>
    <wire loc="464:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x76778688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766f0d68"/></to>
    </wire>
    <wire loc="477:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7676d848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766d6d68"/></to>
    </wire>
    <wire loc="542:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7674be60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766ebd68"/></to>
    </wire>
    <wire loc="546:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x76747280"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766b95f8"/></to>
    </wire>
    <wire loc="552:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x76741c98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766aa5f8"/></to>
    </wire>
    <wire loc="482:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7676bbc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766d1d68"/></to>
    </wire>
    <wire loc="543:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x76749010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766e85f8"/></to>
    </wire>
    <wire loc="441:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7678b928"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7671b948"/></to>
    </wire>
    <wire loc="454:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x76780a08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x767025f8"/></to>
    </wire>
    <wire loc="467:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x76775bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766e85f8"/></to>
    </wire>
    <wire loc="539:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7674e920"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766ce5f8"/></to>
    </wire>
    <wire loc="550:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x76743918"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766af5f8"/></to>
    </wire>
    <wire loc="472:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x76772010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766e35f8"/></to>
    </wire>
    <wire loc="485:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x76766178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766c95f8"/></to>
    </wire>
    <wire loc="496:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7675d010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766b45f8"/></to>
    </wire>
    <wire loc="444:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x76788e68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76713030"/></to>
    </wire>
    <wire loc="494:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x76760bc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766b95f8"/></to>
    </wire>
    <wire loc="449:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x76785178"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7670fe50"/></to>
    </wire>
    <wire loc="462:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7677a368"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766f5d68"/></to>
    </wire>
    <wire loc="475:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7676f4c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766dbd68"/></to>
    </wire>
    <wire loc="499:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7675a4c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766add68"/></to>
    </wire>
    <wire loc="439:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x767945a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x76721aa0"/></to>
    </wire>
    <wire loc="452:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x76782688"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x767075f8"/></to>
    </wire>
    <wire loc="465:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x76777848"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766ed5f8"/></to>
    </wire>
    <wire loc="478:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7676ca08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766d35f8"/></to>
    </wire>
    <wire loc="534:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x76752270"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766f25f8"/></to>
    </wire>
    <wire loc="547:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x767463d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766b7d68"/></to>
    </wire>
    <wire loc="533:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x76753170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766f25f8"/></to>
    </wire>
    <wire loc="483:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7676ad88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766ce5f8"/></to>
    </wire>
    <wire loc="554:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x76740e58"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766add68"/></to>
    </wire>
    <wire loc="558:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7673b290"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766be5f8"/></to>
    </wire>
    <wire loc="529:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x76758868"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x766fad68"/></to>
    </wire>
    <wire loc="54:../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x76659190"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x76653200"/></to>
    </wire>
    <wire loc="58:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x76653200"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x765a6390"/></to>
    </wire>
    <wire loc="57:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x76657a08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7664e010"/></to>
    </wire>
    <wire loc="59:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7664d310"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x76573d80"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7664e010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x762cc0a0"/></to>
    </wire>
    <wire loc="61:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7657e6f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x765c2010"/></to>
    </wire>
    <wire loc="62:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x765ab360"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7664e468"/></to>
    </wire>
    <wire loc="53:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7664e468"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x762c9010"/></to>
    </wire>
    <wire loc="63:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x76579730"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x76609960"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x76609960"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x765f9010"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x762cc0a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x762be9a8"/></to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x762c6d00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x762cc4f8"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x762cc4f8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x762bee20"/></to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x762c8aa8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x76609960"/></to>
    </wire>
    <wire loc="54:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x762bc7f8"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x762c2de0"/></to>
    </wire>
    <wire loc="49:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x762c2de0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7663ce18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x762bb410"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x762c0a30"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x762c0a30"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x76639dc8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x762bbe48"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x762bf4f0"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x762bf4f0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x76638bd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7663ce18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x76881320"/></to>
    </wire>
    <wire loc="59:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x76639dc8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7687d090"/></to>
    </wire>
    <wire loc="60:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x76638bd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x76878278"/></to>
    </wire>
    <wire loc="66:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7663ce18"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x76881320"/></to>
    </wire>
    <wire loc="67:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x76639dc8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7687c8c8"/></to>
    </wire>
    <wire loc="68:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x76638bd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x76877278"/></to>
    </wire>
    <wire loc="70:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7663ce18"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x76881320"/></to>
    </wire>
    <wire loc="71:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x76639dc8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7687b468"/></to>
    </wire>
    <wire loc="72:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x76638bd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x76877a38"/></to>
    </wire>
    <wire loc="74:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7663ce18"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x76881320"/></to>
    </wire>
    <wire loc="75:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x76639dc8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7687a010"/></to>
    </wire>
    <wire loc="76:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x76638bd8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x76876278"/></to>
    </wire>
    <wire loc="78:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7663ce18"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x76881320"/></to>
    </wire>
    <wire loc="79:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x76639dc8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7687ab80"/></to>
    </wire>
    <wire loc="80:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x76638bd8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x76876a38"/></to>
    </wire>
    <wire loc="82:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7663ce18"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x76881320"/></to>
    </wire>
    <wire loc="83:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x76639dc8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x76879708"/></to>
    </wire>
    <wire loc="84:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x76638bd8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x76875278"/></to>
    </wire>
    <wire loc="52:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x765e8268"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x76606490"/></to>
    </wire>
    <wire loc="50:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x76606490"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x765fce90"/></to>
    </wire>
    <wire loc="51:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x765fb010"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x76881320"/></to>
    </wire>
    <wire loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x765aad08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b772b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7657b948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x76b772b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../tos/system/MainC.nc">
      <documentation loc="45:../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="40:../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="43:../../tos/chips/msp430/timer/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="Msp430TimerC" loc="37:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="39(Msp430TimerC.Msp430TimerA):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="39(Msp430TimerC.Msp430TimerB):../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="39(Msp430TimerC.Msp430TimerA0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="39(Msp430TimerC.Msp430TimerA1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="39(Msp430TimerC.Msp430TimerA2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="39(Msp430TimerC.Msp430TimerB0):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="39(Msp430TimerC.Msp430TimerB1):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="39(Msp430TimerC.Msp430TimerB2):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="39(Msp430TimerC.Msp430TimerB3):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="39(Msp430TimerC.Msp430TimerB4):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="39(Msp430TimerC.Msp430TimerB5):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="39(Msp430TimerC.Msp430TimerB6):../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../tos/chips/msp430/McuSleepC.nc" safe="">
      <documentation loc="33:../../tos/chips/msp430/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @date   October 26, 2005&#10; @see  Please refer to TEP 112 for more information about this component and its&#10;          intended use.&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:../../tos/system/TinySchedulerC.nc">
      <documentation loc="34:../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BlinkC" loc="50:BlinkC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../tos/system/LedsC.nc">
      <documentation loc="34:../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="35:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for general-purpose I/O.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="39(HplMsp430GeneralIOC.P10):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="39(HplMsp430GeneralIOC.P11):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="39(HplMsp430GeneralIOC.P12):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="39(HplMsp430GeneralIOC.P13):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="39(HplMsp430GeneralIOC.P14):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="39(HplMsp430GeneralIOC.P15):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="39(HplMsp430GeneralIOC.P16):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="39(HplMsp430GeneralIOC.P17):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="39(HplMsp430GeneralIOC.P20):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="39(HplMsp430GeneralIOC.P21):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="39(HplMsp430GeneralIOC.P22):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="39(HplMsp430GeneralIOC.P23):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="39(HplMsp430GeneralIOC.P24):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="39(HplMsp430GeneralIOC.P25):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="39(HplMsp430GeneralIOC.P26):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="39(HplMsp430GeneralIOC.P27):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="39(HplMsp430GeneralIOC.P30):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="39(HplMsp430GeneralIOC.P31):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="39(HplMsp430GeneralIOC.P32):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="39(HplMsp430GeneralIOC.P33):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="39(HplMsp430GeneralIOC.P34):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="39(HplMsp430GeneralIOC.P35):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="39(HplMsp430GeneralIOC.P36):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="39(HplMsp430GeneralIOC.P37):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="39(HplMsp430GeneralIOC.P40):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="39(HplMsp430GeneralIOC.P41):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="39(HplMsp430GeneralIOC.P42):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="39(HplMsp430GeneralIOC.P43):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="39(HplMsp430GeneralIOC.P44):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="39(HplMsp430GeneralIOC.P45):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="39(HplMsp430GeneralIOC.P46):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="39(HplMsp430GeneralIOC.P47):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="39(HplMsp430GeneralIOC.P50):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="39(HplMsp430GeneralIOC.P51):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="39(HplMsp430GeneralIOC.P52):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="39(HplMsp430GeneralIOC.P53):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="39(HplMsp430GeneralIOC.P54):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="39(HplMsp430GeneralIOC.P55):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="39(HplMsp430GeneralIOC.P56):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="39(HplMsp430GeneralIOC.P57):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="39(HplMsp430GeneralIOC.P60):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="39(HplMsp430GeneralIOC.P61):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="39(HplMsp430GeneralIOC.P62):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="39(HplMsp430GeneralIOC.P63):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="39(HplMsp430GeneralIOC.P64):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="39(HplMsp430GeneralIOC.P65):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="39(HplMsp430GeneralIOC.P66):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="39(HplMsp430GeneralIOC.P67):../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6ed38"/>
            <typename><typedef-ref name="T32khz" ref="0x76b6ef18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6ed38"/>
            <typename><typedef-ref name="T32khz" ref="0x76b6ef18"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6ed38"/>
            <typename><typedef-ref name="T32khz" ref="0x76b6ef18"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6ed38"/>
            <typename><typedef-ref name="T32khz" ref="0x76b6ef18"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="39:../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x76870ac8" loc="40:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x76870d00" loc="41:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7686d010" loc="42:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7686d228" loc="43:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7686d440" loc="44:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7686d650" loc="45:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7686d878" loc="46:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7686daa0" loc="47:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7686dd10" loc="48:../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="39:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7684b498" loc="40:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7684b6f8" loc="41:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="39:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="2:../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011 Eric B.</short>
        <long>&#10; Copyright (c) 2011 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x767377b8" loc="40:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x767379e8" loc="41:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x76737c18" loc="42:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x76737e48" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x76736068" loc="44:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x76629428" loc="43:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x76629428"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x76602010" loc="42:../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x76602010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x765f8488" loc="55:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x765f8488"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x765f88f0" loc="56:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x765f88f0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x765f8b58" loc="57:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x765f8b58"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x765f7010" loc="58:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x765f7010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x765f7278" loc="59:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x765f7708" loc="60:../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x765f7708"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x765e5410" loc="52:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x765e5410"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x765e5878" loc="53:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x765e5878"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x765e5ae0" loc="54:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x765e5ae0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x765e3010" loc="55:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x765e3010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x765e3278" loc="56:../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x765c4910" loc="46:../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x765c4910"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x765a53a8" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x765a53a8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x765a5588" loc="46:../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7657acd0" loc="46:../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7657acd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x768d55f0" loc="58:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x768d55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768d57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x768d99b8" loc="57:../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x768d99b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x768d9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x768d5ea0" loc="42:../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x768d5ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768d40c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x768d10b8" loc="6:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x768d10b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768d1290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x768d48a0" loc="4:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x768d48a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768d4a78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x768d4cb0" loc="5:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x768d4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768d4e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x768d1498" loc="7:../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x768d1498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768d1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x768cfe78" loc="2:../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x768cfe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768ce070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x768c1d18" loc="39:../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x768c1d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768c1ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x768b9c28" loc="40:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x768b9c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x768bd470"/>
        <function-ref name="initTimerB" scoped="" ref="0x768b9ee0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x768bd010"/>
        <function-ref name="initTimerA" scoped="" ref="0x768bd0f0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x768b9e00"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x768bd1d0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x768bd2b0"/>
        <function-ref name="initClocks" scoped="" ref="0x768bd390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x768c0588" loc="39:../../tos/chips/msp430/timer/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x768c0588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768c0760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x768af3e0" loc="46:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x768af3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x768afbd8"/>
        <function-ref name="initTimerB" scoped="" ref="0x768af698"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x768af778"/>
        <function-ref name="initTimerA" scoped="" ref="0x768af858"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x768af5b8"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x768af938"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x768afa18"/>
        <function-ref name="initClocks" scoped="" ref="0x768afaf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x768afde0" loc="47:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x768afde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x768ae010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x768af010" loc="45:../../tos/chips/msp430/timer/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x768af010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768af1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7688b2a8" loc="42:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7688b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7688b480"/>
        <function-ref name="getControl" scoped="" ref="0x7688b560"/>
        <function-ref name="enableEvents" scoped="" ref="0x7688b640"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7688b720"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7688b800"/>
        <function-ref name="disableEvents" scoped="" ref="0x7688b8e0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7688b9c0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7688baa0"/>
        <function-ref name="setControl" scoped="" ref="0x7688bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7687d090" loc="51:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7687d090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7687d268"/>
        <function-ref name="getControl" scoped="" ref="0x7687d348"/>
        <function-ref name="enableEvents" scoped="" ref="0x7687d428"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7687d508"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7687d5e8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7687d6c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7687d7a8"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7687d888"/>
        <function-ref name="setControl" scoped="" ref="0x7687d968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x76882168" loc="47:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x76882168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76882340"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76882420"/>
        <function-ref name="captured" scoped="" ref="0x76882500"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768825e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768826c0"/>
        <function-ref name="setEdge" scoped="" ref="0x768827a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x768735f8" loc="68:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x768735f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768737d0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768738b0"/>
        <function-ref name="captured" scoped="" ref="0x76873990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76873a70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76873b50"/>
        <function-ref name="setEdge" scoped="" ref="0x76873c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x76887278" loc="44:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x76887278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76887450"/>
        <function-ref name="setEvent" scoped="" ref="0x76887530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76887610"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768876f0"/>
        <function-ref name="fired" scoped="" ref="0x768877d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x76877a38" loc="61:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x76877a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76877c10"/>
        <function-ref name="setEvent" scoped="" ref="0x76877cf0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76877dd0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76877eb0"/>
        <function-ref name="fired" scoped="" ref="0x76876010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x76871090" loc="71:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x76871090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76871268"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76871348"/>
        <function-ref name="captured" scoped="" ref="0x76871428"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76871508"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768715e8"/>
        <function-ref name="setEdge" scoped="" ref="0x768716c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7687a010" loc="55:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7687a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7687a1e8"/>
        <function-ref name="getControl" scoped="" ref="0x7687a2c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7687a3a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7687a488"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7687a568"/>
        <function-ref name="disableEvents" scoped="" ref="0x7687a648"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7687a728"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7687a808"/>
        <function-ref name="setControl" scoped="" ref="0x7687a8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x76888ac8" loc="40:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x76888ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x76888ca0"/>
        <function-ref name="getControl" scoped="" ref="0x76888d80"/>
        <function-ref name="enableEvents" scoped="" ref="0x76888e60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76890010"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768900f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x768901d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768902b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x76890390"/>
        <function-ref name="setControl" scoped="" ref="0x76890470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x76874438" loc="66:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x76874438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76874610"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768746f0"/>
        <function-ref name="captured" scoped="" ref="0x768747d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768748b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76874990"/>
        <function-ref name="setEdge" scoped="" ref="0x76874a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x76878a38" loc="59:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x76878a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76878c10"/>
        <function-ref name="setEvent" scoped="" ref="0x76878cf0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76878dd0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76878eb0"/>
        <function-ref name="fired" scoped="" ref="0x76877010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7687dc00" loc="52:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7687dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7687de58"/>
        <function-ref name="getControl" scoped="" ref="0x7687c010"/>
        <function-ref name="enableEvents" scoped="" ref="0x7687c0f0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7687c1d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7687c2b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7687c390"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7687c470"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7687c550"/>
        <function-ref name="setControl" scoped="" ref="0x7687c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x76882a08" loc="48:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x76882a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76882be0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76882cc0"/>
        <function-ref name="captured" scoped="" ref="0x76882da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76882e80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76881010"/>
        <function-ref name="setEdge" scoped="" ref="0x768810f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x76873e98" loc="69:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x76873e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768720c0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768721a0"/>
        <function-ref name="captured" scoped="" ref="0x76872280"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76872360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76872440"/>
        <function-ref name="setEdge" scoped="" ref="0x76872520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7687c8c8" loc="53:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7687c8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7687caa0"/>
        <function-ref name="getControl" scoped="" ref="0x7687cb80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7687cc60"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7687cd40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7687ce20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7687cf00"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7687b010"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7687b0f0"/>
        <function-ref name="setControl" scoped="" ref="0x7687b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x76887a38" loc="45:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x76887a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76887c10"/>
        <function-ref name="setEvent" scoped="" ref="0x76887cf0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76887dd0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76887eb0"/>
        <function-ref name="fired" scoped="" ref="0x76886010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7688de98" loc="39:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7688de98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x768910c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x768911a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x76891280"/>
        <function-ref name="get" scoped="" ref="0x76891360"/>
        <function-ref name="disableEvents" scoped="" ref="0x76891440"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76891520"/>
        <function-ref name="getMode" scoped="" ref="0x76891600"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768916e0"/>
        <function-ref name="overflow" scoped="" ref="0x768917c0"/>
        <function-ref name="setMode" scoped="" ref="0x768918a0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x76891980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x76876278" loc="62:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x76876278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76876450"/>
        <function-ref name="setEvent" scoped="" ref="0x76876530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76876610"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768766f0"/>
        <function-ref name="fired" scoped="" ref="0x768767d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x76890708" loc="41:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x76890708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x768908e0"/>
        <function-ref name="getControl" scoped="" ref="0x768909c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x76890aa0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76890b80"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x76890c60"/>
        <function-ref name="disableEvents" scoped="" ref="0x76890d40"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x76890e20"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x76890f00"/>
        <function-ref name="setControl" scoped="" ref="0x7688b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7687ab80" loc="56:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7687ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7687ad58"/>
        <function-ref name="getControl" scoped="" ref="0x7687ae38"/>
        <function-ref name="enableEvents" scoped="" ref="0x7687af18"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76879010"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768790f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x768791d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768792b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x76879390"/>
        <function-ref name="setControl" scoped="" ref="0x76879470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7687e8b0" loc="46:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7687e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7687ea88"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7687eb68"/>
        <function-ref name="captured" scoped="" ref="0x7687ec48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7687ed28"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7687ee08"/>
        <function-ref name="setEdge" scoped="" ref="0x7687eee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x76874cd8" loc="67:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x76874cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76874eb0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76873010"/>
        <function-ref name="captured" scoped="" ref="0x768730f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768731d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768732b0"/>
        <function-ref name="setEdge" scoped="" ref="0x76873390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x768839e0" loc="43:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x768839e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76883bb8"/>
        <function-ref name="setEvent" scoped="" ref="0x76883c98"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76883d78"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76883e58"/>
        <function-ref name="fired" scoped="" ref="0x76887010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x76877278" loc="60:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x76877278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76877450"/>
        <function-ref name="setEvent" scoped="" ref="0x76877530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76877610"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768776f0"/>
        <function-ref name="fired" scoped="" ref="0x768777d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x76872788" loc="70:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x76872788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76872960"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76872a40"/>
        <function-ref name="captured" scoped="" ref="0x76872b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76872c00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76872ce0"/>
        <function-ref name="setEdge" scoped="" ref="0x76872dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7687b468" loc="54:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7687b468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7687b640"/>
        <function-ref name="getControl" scoped="" ref="0x7687b720"/>
        <function-ref name="enableEvents" scoped="" ref="0x7687b800"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7687b8e0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7687b9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7687baa0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7687bb80"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7687bc60"/>
        <function-ref name="setControl" scoped="" ref="0x7687bd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x76881320" loc="50:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x76881320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x768814f8"/>
        <function-ref name="setClockSource" scoped="" ref="0x768815d8"/>
        <function-ref name="enableEvents" scoped="" ref="0x768816b8"/>
        <function-ref name="get" scoped="" ref="0x76881798"/>
        <function-ref name="disableEvents" scoped="" ref="0x76881878"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76881958"/>
        <function-ref name="getMode" scoped="" ref="0x76881a38"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76881b18"/>
        <function-ref name="overflow" scoped="" ref="0x76881bf8"/>
        <function-ref name="setMode" scoped="" ref="0x76881cd8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x76881db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x76876a38" loc="63:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x76876a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76876c10"/>
        <function-ref name="setEvent" scoped="" ref="0x76876cf0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76876dd0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76876eb0"/>
        <function-ref name="fired" scoped="" ref="0x76875010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x76875b38" loc="65:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x76875b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76875d10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76875df0"/>
        <function-ref name="captured" scoped="" ref="0x76875ed0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76874010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768740f0"/>
        <function-ref name="setEdge" scoped="" ref="0x768741d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x76875278" loc="64:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x76875278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76875550"/>
        <function-ref name="setEvent" scoped="" ref="0x76875630"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76875710"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768757f0"/>
        <function-ref name="fired" scoped="" ref="0x768758d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x76878278" loc="58:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x76878278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76878450"/>
        <function-ref name="setEvent" scoped="" ref="0x76878530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76878610"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768786f0"/>
        <function-ref name="fired" scoped="" ref="0x768787d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x76879708" loc="57:../../tos/chips/msp430/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x76879708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x768798e0"/>
        <function-ref name="getControl" scoped="" ref="0x768799c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x76879aa0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76879b80"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x76879c60"/>
        <function-ref name="disableEvents" scoped="" ref="0x76879d40"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x76879e20"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x76879f00"/>
        <function-ref name="setControl" scoped="" ref="0x76878010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x76851598" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x76851598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76851770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x76851240" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x76851240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76851418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x768518f0" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x768518f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76851ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7686eec8" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7686eec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x768510c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7686e218" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7686e218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7686e3f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7686e4d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7686e5b0"/>
        <function-ref name="get" scoped="" ref="0x7686e690"/>
        <function-ref name="disableEvents" scoped="" ref="0x7686e770"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7686e850"/>
        <function-ref name="getMode" scoped="" ref="0x7686e930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7686ea10"/>
        <function-ref name="overflow" scoped="" ref="0x7686eaf0"/>
        <function-ref name="setMode" scoped="" ref="0x7686ebd0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7686ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7684c010" loc="53:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7684c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7684c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7684dc90" loc="52:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7684dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7684de68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7684c368" loc="54:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7684c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7684c540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7684d928" loc="51:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7684d928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7684db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7684ebd0" loc="50:../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7684ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7684eda8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7684ee88"/>
        <function-ref name="enableEvents" scoped="" ref="0x7684d010"/>
        <function-ref name="get" scoped="" ref="0x7684d0f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7684d1d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7684d2b0"/>
        <function-ref name="getMode" scoped="" ref="0x7684d390"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7684d470"/>
        <function-ref name="overflow" scoped="" ref="0x7684d550"/>
        <function-ref name="setMode" scoped="" ref="0x7684d630"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7684d710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x76821430" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x76821430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76821608"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768216e8"/>
        <function-ref name="captured" scoped="" ref="0x768217c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768218a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76821988"/>
        <function-ref name="setEdge" scoped="" ref="0x76821a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x768492c8" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x768492c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x768494a0"/>
        <function-ref name="getControl" scoped="" ref="0x76849580"/>
        <function-ref name="enableEvents" scoped="" ref="0x76849660"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76849740"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x76849820"/>
        <function-ref name="disableEvents" scoped="" ref="0x76849900"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768499e0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x76849ac0"/>
        <function-ref name="setControl" scoped="" ref="0x76849ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x76820890" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x76820890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76820a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x76849d20" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x76849d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76849ef8"/>
        <function-ref name="setEvent" scoped="" ref="0x76821010"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768210f0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768211d0"/>
        <function-ref name="fired" scoped="" ref="0x768212b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x76821be8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x76821be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76821dc0"/>
        <function-ref name="setClockSource" scoped="" ref="0x76821ea0"/>
        <function-ref name="enableEvents" scoped="" ref="0x76820010"/>
        <function-ref name="get" scoped="" ref="0x768200f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x768201d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768202b0"/>
        <function-ref name="getMode" scoped="" ref="0x76820390"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76820470"/>
        <function-ref name="overflow" scoped="" ref="0x76820550"/>
        <function-ref name="setMode" scoped="" ref="0x76820630"/>
        <function-ref name="setInputDivider" scoped="" ref="0x76820710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7681d350" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7681d350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7681d528"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7681d608"/>
        <function-ref name="captured" scoped="" ref="0x7681d6e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7681d7c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7681d8a8"/>
        <function-ref name="setEdge" scoped="" ref="0x7681d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7681e140" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7681e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7681e318"/>
        <function-ref name="getControl" scoped="" ref="0x7681e3f8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7681e4d8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7681e5b8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7681e698"/>
        <function-ref name="disableEvents" scoped="" ref="0x7681e778"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7681e858"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7681e938"/>
        <function-ref name="setControl" scoped="" ref="0x7681ea18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7681c7b0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7681c7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7681c988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7681eb98" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7681eb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7681ed70"/>
        <function-ref name="setEvent" scoped="" ref="0x7681ee50"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7681d010"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7681d0f0"/>
        <function-ref name="fired" scoped="" ref="0x7681d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7681db08" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7681db08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7681dce0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7681ddc0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7681dea0"/>
        <function-ref name="get" scoped="" ref="0x7681c010"/>
        <function-ref name="disableEvents" scoped="" ref="0x7681c0f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7681c1d0"/>
        <function-ref name="getMode" scoped="" ref="0x7681c2b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7681c390"/>
        <function-ref name="overflow" scoped="" ref="0x7681c470"/>
        <function-ref name="setMode" scoped="" ref="0x7681c550"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7681c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x76818198" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x76818198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76818370"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76818450"/>
        <function-ref name="captured" scoped="" ref="0x76818530"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76818610"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768186f0"/>
        <function-ref name="setEdge" scoped="" ref="0x768187d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7681a050" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7681a050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7681a228"/>
        <function-ref name="getControl" scoped="" ref="0x7681a308"/>
        <function-ref name="enableEvents" scoped="" ref="0x7681a3e8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7681a4c8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7681a5a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x7681a688"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7681a768"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7681a848"/>
        <function-ref name="setControl" scoped="" ref="0x7681a928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x768175f0" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x768175f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x768177c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7681aaa8" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7681aaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7681ac80"/>
        <function-ref name="setEvent" scoped="" ref="0x7681ad60"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7681ae40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7681af20"/>
        <function-ref name="fired" scoped="" ref="0x76818018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x76818950" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x76818950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76818b28"/>
        <function-ref name="setClockSource" scoped="" ref="0x76818c08"/>
        <function-ref name="enableEvents" scoped="" ref="0x76818ce8"/>
        <function-ref name="get" scoped="" ref="0x76818dc8"/>
        <function-ref name="disableEvents" scoped="" ref="0x76818ea8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76817010"/>
        <function-ref name="getMode" scoped="" ref="0x768170f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768171d0"/>
        <function-ref name="overflow" scoped="" ref="0x768172b0"/>
        <function-ref name="setMode" scoped="" ref="0x76817390"/>
        <function-ref name="setInputDivider" scoped="" ref="0x76817470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x76814010" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x76814010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768141e8"/>
        <function-ref name="setSynchronous" scoped="" ref="0x768142c8"/>
        <function-ref name="captured" scoped="" ref="0x768143a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76814488"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76814568"/>
        <function-ref name="setEdge" scoped="" ref="0x76814648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x76816e78" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x76816e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x76815070"/>
        <function-ref name="getControl" scoped="" ref="0x76815150"/>
        <function-ref name="enableEvents" scoped="" ref="0x76815230"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76815310"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768153f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x768154d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768155b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x76815690"/>
        <function-ref name="setControl" scoped="" ref="0x76815770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x76813430" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x76813430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76813608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x768158f0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x768158f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76815ac8"/>
        <function-ref name="setEvent" scoped="" ref="0x76815ba8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76815c88"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76815d68"/>
        <function-ref name="fired" scoped="" ref="0x76815e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x768147c8" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x768147c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x768149a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x76814a80"/>
        <function-ref name="enableEvents" scoped="" ref="0x76814b60"/>
        <function-ref name="get" scoped="" ref="0x76814c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x76814d20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76814e00"/>
        <function-ref name="getMode" scoped="" ref="0x76814ee0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76813010"/>
        <function-ref name="overflow" scoped="" ref="0x768130f0"/>
        <function-ref name="setMode" scoped="" ref="0x768131d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x768132b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x76811e88" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x76811e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76810070"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76810150"/>
        <function-ref name="captured" scoped="" ref="0x76810230"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76810310"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768103f0"/>
        <function-ref name="setEdge" scoped="" ref="0x768104d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x76812cb8" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x76812cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x76812e90"/>
        <function-ref name="getControl" scoped="" ref="0x76811010"/>
        <function-ref name="enableEvents" scoped="" ref="0x768110f0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x768111d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x768112b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x76811390"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x76811470"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x76811550"/>
        <function-ref name="setControl" scoped="" ref="0x76811630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7680f278" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7680f278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7680f450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x768117b0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x768117b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76811988"/>
        <function-ref name="setEvent" scoped="" ref="0x76811a68"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76811b48"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76811c28"/>
        <function-ref name="fired" scoped="" ref="0x76811d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x76810650" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x76810650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76810828"/>
        <function-ref name="setClockSource" scoped="" ref="0x76810908"/>
        <function-ref name="enableEvents" scoped="" ref="0x768109e8"/>
        <function-ref name="get" scoped="" ref="0x76810ac8"/>
        <function-ref name="disableEvents" scoped="" ref="0x76810ba8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76810c88"/>
        <function-ref name="getMode" scoped="" ref="0x76810d68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76810e48"/>
        <function-ref name="overflow" scoped="" ref="0x76810f28"/>
        <function-ref name="setMode" scoped="" ref="0x7680f018"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7680f0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7680dcc8" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7680dcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7680dea0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7680b010"/>
        <function-ref name="captured" scoped="" ref="0x7680b0f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7680b1d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7680b2b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7680b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7680eb00" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7680eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7680ecd8"/>
        <function-ref name="getControl" scoped="" ref="0x7680edb8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7680ee98"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7680d010"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7680d0f0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7680d1d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7680d2b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7680d390"/>
        <function-ref name="setControl" scoped="" ref="0x7680d470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7680a190" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7680a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7680a368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7680d5f0" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7680d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7680d7c8"/>
        <function-ref name="setEvent" scoped="" ref="0x7680d8a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7680d988"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7680da68"/>
        <function-ref name="fired" scoped="" ref="0x7680db48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7680b510" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7680b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7680b6e8"/>
        <function-ref name="setClockSource" scoped="" ref="0x7680b7c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x7680b8a8"/>
        <function-ref name="get" scoped="" ref="0x7680b988"/>
        <function-ref name="disableEvents" scoped="" ref="0x7680ba68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7680bb48"/>
        <function-ref name="getMode" scoped="" ref="0x7680bc28"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7680bd08"/>
        <function-ref name="overflow" scoped="" ref="0x7680bde8"/>
        <function-ref name="setMode" scoped="" ref="0x7680bec8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7680a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x76808be8" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x76808be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76808dc0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76808ea0"/>
        <function-ref name="captured" scoped="" ref="0x76807010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x768070f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768071d0"/>
        <function-ref name="setEdge" scoped="" ref="0x768072b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x76809a20" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x76809a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x76809bf8"/>
        <function-ref name="getControl" scoped="" ref="0x76809cd8"/>
        <function-ref name="enableEvents" scoped="" ref="0x76809db8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76809e98"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x76808010"/>
        <function-ref name="disableEvents" scoped="" ref="0x768080f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768081d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x768082b0"/>
        <function-ref name="setControl" scoped="" ref="0x76808390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x76806080" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x76806080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x76806258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x76808510" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x76808510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x768086e8"/>
        <function-ref name="setEvent" scoped="" ref="0x768087c8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768088a8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x76808988"/>
        <function-ref name="fired" scoped="" ref="0x76808a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x76807430" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x76807430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76807608"/>
        <function-ref name="setClockSource" scoped="" ref="0x768076e8"/>
        <function-ref name="enableEvents" scoped="" ref="0x768077c8"/>
        <function-ref name="get" scoped="" ref="0x768078a8"/>
        <function-ref name="disableEvents" scoped="" ref="0x76807988"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76807a68"/>
        <function-ref name="getMode" scoped="" ref="0x76807b48"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76807c28"/>
        <function-ref name="overflow" scoped="" ref="0x76807d08"/>
        <function-ref name="setMode" scoped="" ref="0x76807de8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x76807ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x76804b08" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x76804b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76804ce0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76804dc0"/>
        <function-ref name="captured" scoped="" ref="0x76804ea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76803010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x768030f0"/>
        <function-ref name="setEdge" scoped="" ref="0x768031d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x768058f8" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x768058f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x76805ad0"/>
        <function-ref name="getControl" scoped="" ref="0x76805bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x76805c90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76805d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x76805e50"/>
        <function-ref name="disableEvents" scoped="" ref="0x76804010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768040f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x768041d0"/>
        <function-ref name="setControl" scoped="" ref="0x768042b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x76802010" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x76802010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x768021e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x76804430" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x76804430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76804608"/>
        <function-ref name="setEvent" scoped="" ref="0x768046e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768047c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768048a8"/>
        <function-ref name="fired" scoped="" ref="0x76804988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x76803350" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x76803350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76803528"/>
        <function-ref name="setClockSource" scoped="" ref="0x76803608"/>
        <function-ref name="enableEvents" scoped="" ref="0x768036e8"/>
        <function-ref name="get" scoped="" ref="0x768037c8"/>
        <function-ref name="disableEvents" scoped="" ref="0x768038a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76803988"/>
        <function-ref name="getMode" scoped="" ref="0x76803a68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76803b48"/>
        <function-ref name="overflow" scoped="" ref="0x76803c28"/>
        <function-ref name="setMode" scoped="" ref="0x76803d08"/>
        <function-ref name="setInputDivider" scoped="" ref="0x76803de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x76800b08" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x76800b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76800ce0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x76800dc0"/>
        <function-ref name="captured" scoped="" ref="0x76800ea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x767ff010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767ff0f0"/>
        <function-ref name="setEdge" scoped="" ref="0x767ff1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x768018f8" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x768018f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x76801ad0"/>
        <function-ref name="getControl" scoped="" ref="0x76801bb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x76801c90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x76801d70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x76801e50"/>
        <function-ref name="disableEvents" scoped="" ref="0x76800010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x768000f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x768001d0"/>
        <function-ref name="setControl" scoped="" ref="0x768002b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x767fe010" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x767fe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767fe1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x76800430" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x76800430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76800608"/>
        <function-ref name="setEvent" scoped="" ref="0x768006e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x768007c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x768008a8"/>
        <function-ref name="fired" scoped="" ref="0x76800988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x767ff350" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x767ff350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x767ff528"/>
        <function-ref name="setClockSource" scoped="" ref="0x767ff608"/>
        <function-ref name="enableEvents" scoped="" ref="0x767ff6e8"/>
        <function-ref name="get" scoped="" ref="0x767ff7c8"/>
        <function-ref name="disableEvents" scoped="" ref="0x767ff8a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x767ff988"/>
        <function-ref name="getMode" scoped="" ref="0x767ffa68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767ffb48"/>
        <function-ref name="overflow" scoped="" ref="0x767ffc28"/>
        <function-ref name="setMode" scoped="" ref="0x767ffd08"/>
        <function-ref name="setInputDivider" scoped="" ref="0x767ffde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x767fbb08" loc="46:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x767fbb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x767fbce0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x767fbdc0"/>
        <function-ref name="captured" scoped="" ref="0x767fbea0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x767fa010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767fa0f0"/>
        <function-ref name="setEdge" scoped="" ref="0x767fa1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x767fc8f8" loc="44:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x767fc8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x767fcad0"/>
        <function-ref name="getControl" scoped="" ref="0x767fcbb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x767fcc90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x767fcd70"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x767fce50"/>
        <function-ref name="disableEvents" scoped="" ref="0x767fb010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x767fb0f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x767fb1d0"/>
        <function-ref name="setControl" scoped="" ref="0x767fb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x767f9010" loc="48:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x767f9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767f91e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x767fb430" loc="45:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x767fb430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x767fb608"/>
        <function-ref name="setEvent" scoped="" ref="0x767fb6e8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x767fb7c8"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x767fb8a8"/>
        <function-ref name="fired" scoped="" ref="0x767fb988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x767fa350" loc="47:../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x767fa350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x767fa528"/>
        <function-ref name="setClockSource" scoped="" ref="0x767fa608"/>
        <function-ref name="enableEvents" scoped="" ref="0x767fa6e8"/>
        <function-ref name="get" scoped="" ref="0x767fa7c8"/>
        <function-ref name="disableEvents" scoped="" ref="0x767fa8a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x767fa988"/>
        <function-ref name="getMode" scoped="" ref="0x767faa68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x767fab48"/>
        <function-ref name="overflow" scoped="" ref="0x767fac28"/>
        <function-ref name="setMode" scoped="" ref="0x767fad08"/>
        <function-ref name="setInputDivider" scoped="" ref="0x767fade8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x767f5300" loc="7:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x767f5300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767f54d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x767f8558" loc="4:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x767f8558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767f8730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x767f89e0" loc="5:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x767f89e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767f8bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x767f8e68" loc="6:../../tos/chips/msp430/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x767f8e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x767f5050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x768e6600" loc="55:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x768e6600"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x768e67d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x76b75948" loc="51:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x76b75948"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x76b75b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7697b680" loc="52:../../tos/chips/msp430/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7697b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7697b858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x768bf818" loc="39:../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x768bf818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x767da0f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x768bfad0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x768bfbb0"/>
        <function-ref name="initTimerA" scoped="" ref="0x768bfc90"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x768bf9f0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x768bfd70"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x768bfe50"/>
        <function-ref name="initClocks" scoped="" ref="0x767da010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x767db648" loc="60:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x767db648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x767db820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x768d7838" loc="57:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x768d7838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x768d7a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x767db240" loc="59:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x767db240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x767db418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x768d7bd0" loc="58:../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x768d7bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768d7da8"/>
        <function-ref name="taskLoop" scoped="" ref="0x768d7e88"/>
        <function-ref name="runNextTask" scoped="" ref="0x767db010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x76b772b8" loc="48:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x76b772b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x76b77490"/>
        <function-ref name="runTask" scoped="" ref="0x76b77570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x76b76a78" loc="47:../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x76b76a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76b76c50"/>
        <function-ref name="taskLoop" scoped="" ref="0x76b76d30"/>
        <function-ref name="runNextTask" scoped="" ref="0x76b76e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x768fb238" loc="56:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x768fb238"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x768fb410"/>
        <function-ref name="runTask" scoped="" ref="0x768fb4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x768fbe90" loc="57:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x768fbe90"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x768fa080"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x768fc9f0" loc="55:../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x768fc9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x768fcbc8"/>
        <function-ref name="taskLoop" scoped="" ref="0x768fcca8"/>
        <function-ref name="runNextTask" scoped="" ref="0x768fcd88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x767c4270" loc="52:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer0" scoped="" ref="0x767c4270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x767cad58"/>
        <function-ref name="fired" scoped="" ref="0x767ca010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x767ca718"/>
        <function-ref name="isOneShot" scoped="" ref="0x767ca4c0"/>
        <function-ref name="getdt" scoped="" ref="0x767c3268"/>
        <function-ref name="gett0" scoped="" ref="0x767c3010"/>
        <function-ref name="isRunning" scoped="" ref="0x767ca268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x767c4898"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x767caa38"/>
        <function-ref name="startOneShot" scoped="" ref="0x767c4b18"/>
        <function-ref name="stop" scoped="" ref="0x767c4d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x767bd980" loc="56:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x767bd980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x767bdb58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x767c3600" loc="53:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer1" scoped="" ref="0x767c3600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x767c0110"/>
        <function-ref name="fired" scoped="" ref="0x767c23a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x767c2ab0"/>
        <function-ref name="isOneShot" scoped="" ref="0x767c2858"/>
        <function-ref name="getdt" scoped="" ref="0x767c05c0"/>
        <function-ref name="gett0" scoped="" ref="0x767c0368"/>
        <function-ref name="isRunning" scoped="" ref="0x767c2600"/>
        <function-ref name="startPeriodic" scoped="" ref="0x767c3c28"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x767c2dd0"/>
        <function-ref name="startOneShot" scoped="" ref="0x767c3ea8"/>
        <function-ref name="stop" scoped="" ref="0x767c2150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x767b6d10" loc="55:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x767b6d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x767b6ee8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x767bd010"/>
        <function-ref name="led1On" scoped="" ref="0x767bd0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x767bd1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x767bd2b0"/>
        <function-ref name="get" scoped="" ref="0x767bd390"/>
        <function-ref name="led1Off" scoped="" ref="0x767bd470"/>
        <function-ref name="led2Off" scoped="" ref="0x767bd7f0"/>
        <function-ref name="set" scoped="" ref="0x767bd550"/>
        <function-ref name="led0On" scoped="" ref="0x767bd630"/>
        <function-ref name="led2On" scoped="" ref="0x767bd710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x767c0958" loc="54:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer2" scoped="" ref="0x767c0958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x767be4c8"/>
        <function-ref name="fired" scoped="" ref="0x767bf768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x767bfe70"/>
        <function-ref name="isOneShot" scoped="" ref="0x767bfc18"/>
        <function-ref name="getdt" scoped="" ref="0x767be978"/>
        <function-ref name="gett0" scoped="" ref="0x767be720"/>
        <function-ref name="isRunning" scoped="" ref="0x767bf9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x767bf010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x767be1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x767bf290"/>
        <function-ref name="stop" scoped="" ref="0x767bf510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x768dade8" loc="46:../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x768dade8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x767b1010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x767b10f0"/>
        <function-ref name="led1On" scoped="" ref="0x767b11d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x767b12b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x767b1390"/>
        <function-ref name="get" scoped="" ref="0x767b1470"/>
        <function-ref name="led1Off" scoped="" ref="0x767b1550"/>
        <function-ref name="led2Off" scoped="" ref="0x767b18d0"/>
        <function-ref name="set" scoped="" ref="0x767b1630"/>
        <function-ref name="led0On" scoped="" ref="0x767b1710"/>
        <function-ref name="led2On" scoped="" ref="0x767b17f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x767a8370" loc="50:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x767a8370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x767a8548"/>
        <function-ref name="isInput" scoped="" ref="0x767a8628"/>
        <function-ref name="toggle" scoped="" ref="0x767a8708"/>
        <function-ref name="isOutput" scoped="" ref="0x767a87e8"/>
        <function-ref name="get" scoped="" ref="0x767a88c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x767a89a8"/>
        <function-ref name="set" scoped="" ref="0x767a8a88"/>
        <function-ref name="clr" scoped="" ref="0x767a8b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x767ae170" loc="46:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x767ae170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x767ae348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x767a8d58" loc="51:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x767a8d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x767ac010"/>
        <function-ref name="isInput" scoped="" ref="0x767ac0f0"/>
        <function-ref name="toggle" scoped="" ref="0x767ac1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x767ac2b0"/>
        <function-ref name="get" scoped="" ref="0x767ac390"/>
        <function-ref name="makeOutput" scoped="" ref="0x767ac470"/>
        <function-ref name="set" scoped="" ref="0x767ac550"/>
        <function-ref name="clr" scoped="" ref="0x767ac630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x767ae4b8" loc="47:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x767ae4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x767ae690"/>
        <function-ref name="led0Toggle" scoped="" ref="0x767ae770"/>
        <function-ref name="led1On" scoped="" ref="0x767ae850"/>
        <function-ref name="led1Toggle" scoped="" ref="0x767ae930"/>
        <function-ref name="led2Toggle" scoped="" ref="0x767aea10"/>
        <function-ref name="get" scoped="" ref="0x767aeaf0"/>
        <function-ref name="led1Off" scoped="" ref="0x767aebd0"/>
        <function-ref name="led2Off" scoped="" ref="0x767ad010"/>
        <function-ref name="set" scoped="" ref="0x767aecb0"/>
        <function-ref name="led0On" scoped="" ref="0x767aed90"/>
        <function-ref name="led2On" scoped="" ref="0x767aee70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x767ac820" loc="52:../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x767ac820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x767ac9f8"/>
        <function-ref name="isInput" scoped="" ref="0x767acad8"/>
        <function-ref name="toggle" scoped="" ref="0x767acbb8"/>
        <function-ref name="isOutput" scoped="" ref="0x767acc98"/>
        <function-ref name="get" scoped="" ref="0x767acd78"/>
        <function-ref name="makeOutput" scoped="" ref="0x767ace58"/>
        <function-ref name="set" scoped="" ref="0x767ab010"/>
        <function-ref name="clr" scoped="" ref="0x767ab0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x767b02d8" loc="41:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x767b02d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x767b04b0"/>
        <function-ref name="isInput" scoped="" ref="0x767b0590"/>
        <function-ref name="toggle" scoped="" ref="0x767b0670"/>
        <function-ref name="isOutput" scoped="" ref="0x767b0750"/>
        <function-ref name="get" scoped="" ref="0x767b0830"/>
        <function-ref name="makeOutput" scoped="" ref="0x767b0910"/>
        <function-ref name="set" scoped="" ref="0x767b09f0"/>
        <function-ref name="clr" scoped="" ref="0x767b0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x767b0ce0" loc="42:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x767b0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x767b0eb8"/>
        <function-ref name="isInput" scoped="" ref="0x76798010"/>
        <function-ref name="toggle" scoped="" ref="0x767980f0"/>
        <function-ref name="isOutput" scoped="" ref="0x767981d0"/>
        <function-ref name="get" scoped="" ref="0x767982b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76798390"/>
        <function-ref name="set" scoped="" ref="0x76798470"/>
        <function-ref name="clr" scoped="" ref="0x76798550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x767971a0" loc="44:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x767971a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76797378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x76798760" loc="43:../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x76798760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76798938"/>
        <function-ref name="isInput" scoped="" ref="0x76798a18"/>
        <function-ref name="toggle" scoped="" ref="0x76798af8"/>
        <function-ref name="isOutput" scoped="" ref="0x76798bd8"/>
        <function-ref name="get" scoped="" ref="0x76798cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x76798d98"/>
        <function-ref name="set" scoped="" ref="0x76798e78"/>
        <function-ref name="clr" scoped="" ref="0x76797010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7678aae8" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7678aae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7678acc0"/>
        <function-ref name="isInput" scoped="" ref="0x7678ada0"/>
        <function-ref name="setResistor" scoped="" ref="0x7678ae80"/>
        <function-ref name="toggle" scoped="" ref="0x76789010"/>
        <function-ref name="isOutput" scoped="" ref="0x767890f0"/>
        <function-ref name="getResistor" scoped="" ref="0x767891d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x767892b0"/>
        <function-ref name="get" scoped="" ref="0x76789390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76789470"/>
        <function-ref name="getRaw" scoped="" ref="0x76789550"/>
        <function-ref name="set" scoped="" ref="0x76789630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76789710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x767897f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76789950"/>
        <function-ref name="clr" scoped="" ref="0x76789a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7677fbc8" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7677fbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7677fda0"/>
        <function-ref name="isInput" scoped="" ref="0x7677fe80"/>
        <function-ref name="setResistor" scoped="" ref="0x7677e010"/>
        <function-ref name="toggle" scoped="" ref="0x7677e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7677e1d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7677e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7677e390"/>
        <function-ref name="get" scoped="" ref="0x7677e470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7677e550"/>
        <function-ref name="getRaw" scoped="" ref="0x7677e630"/>
        <function-ref name="set" scoped="" ref="0x7677e710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7677e7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7677e8d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7677ea30"/>
        <function-ref name="clr" scoped="" ref="0x7677eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x76756d68" loc="145:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x76756d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76755010"/>
        <function-ref name="isInput" scoped="" ref="0x767550f0"/>
        <function-ref name="setResistor" scoped="" ref="0x767551d0"/>
        <function-ref name="toggle" scoped="" ref="0x767552b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76755390"/>
        <function-ref name="getResistor" scoped="" ref="0x76755470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76755550"/>
        <function-ref name="get" scoped="" ref="0x76755630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76755710"/>
        <function-ref name="getRaw" scoped="" ref="0x767557f0"/>
        <function-ref name="set" scoped="" ref="0x767558d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767559b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76755a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76755bf0"/>
        <function-ref name="clr" scoped="" ref="0x76755cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x76742ad8" loc="165:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x76742ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76742cb0"/>
        <function-ref name="isInput" scoped="" ref="0x76742d90"/>
        <function-ref name="setResistor" scoped="" ref="0x76742e70"/>
        <function-ref name="toggle" scoped="" ref="0x76741010"/>
        <function-ref name="isOutput" scoped="" ref="0x767410f0"/>
        <function-ref name="getResistor" scoped="" ref="0x767411d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x767412b0"/>
        <function-ref name="get" scoped="" ref="0x76741390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76741470"/>
        <function-ref name="getRaw" scoped="" ref="0x76741550"/>
        <function-ref name="set" scoped="" ref="0x76741630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76741710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x767417f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76741950"/>
        <function-ref name="clr" scoped="" ref="0x76741a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x76754010" loc="146:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x76754010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x767541e8"/>
        <function-ref name="isInput" scoped="" ref="0x767542c8"/>
        <function-ref name="setResistor" scoped="" ref="0x767543a8"/>
        <function-ref name="toggle" scoped="" ref="0x76754488"/>
        <function-ref name="isOutput" scoped="" ref="0x76754568"/>
        <function-ref name="getResistor" scoped="" ref="0x76754648"/>
        <function-ref name="makeOutput" scoped="" ref="0x76754728"/>
        <function-ref name="get" scoped="" ref="0x76754808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x767548e8"/>
        <function-ref name="getRaw" scoped="" ref="0x767549c8"/>
        <function-ref name="set" scoped="" ref="0x76754aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76754b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76754c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76754dc8"/>
        <function-ref name="clr" scoped="" ref="0x76754ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7677c010" loc="71:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7677c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7677c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7677c2c8"/>
        <function-ref name="setResistor" scoped="" ref="0x7677c3a8"/>
        <function-ref name="toggle" scoped="" ref="0x7677c488"/>
        <function-ref name="isOutput" scoped="" ref="0x7677c568"/>
        <function-ref name="getResistor" scoped="" ref="0x7677c648"/>
        <function-ref name="makeOutput" scoped="" ref="0x7677c728"/>
        <function-ref name="get" scoped="" ref="0x7677c808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7677c8e8"/>
        <function-ref name="getRaw" scoped="" ref="0x7677c9c8"/>
        <function-ref name="set" scoped="" ref="0x7677caa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7677cb88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7677cc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7677cdc8"/>
        <function-ref name="clr" scoped="" ref="0x7677cea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x76771178" loc="84:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x76771178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76771350"/>
        <function-ref name="isInput" scoped="" ref="0x76771430"/>
        <function-ref name="setResistor" scoped="" ref="0x76771510"/>
        <function-ref name="toggle" scoped="" ref="0x767715f0"/>
        <function-ref name="isOutput" scoped="" ref="0x767716d0"/>
        <function-ref name="getResistor" scoped="" ref="0x767717b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76771890"/>
        <function-ref name="get" scoped="" ref="0x76771970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76771a50"/>
        <function-ref name="getRaw" scoped="" ref="0x76771b30"/>
        <function-ref name="set" scoped="" ref="0x76771c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76771cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76771dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76770010"/>
        <function-ref name="clr" scoped="" ref="0x767700f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x76765368" loc="97:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x76765368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76765540"/>
        <function-ref name="isInput" scoped="" ref="0x76765620"/>
        <function-ref name="setResistor" scoped="" ref="0x76765700"/>
        <function-ref name="toggle" scoped="" ref="0x767657e0"/>
        <function-ref name="isOutput" scoped="" ref="0x767658c0"/>
        <function-ref name="getResistor" scoped="" ref="0x767659a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76765a80"/>
        <function-ref name="get" scoped="" ref="0x76765b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76765c40"/>
        <function-ref name="getRaw" scoped="" ref="0x76765d20"/>
        <function-ref name="set" scoped="" ref="0x76765e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76765ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76764010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76764170"/>
        <function-ref name="clr" scoped="" ref="0x76764250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7675c178" loc="108:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7675c178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7675c350"/>
        <function-ref name="isInput" scoped="" ref="0x7675c430"/>
        <function-ref name="setResistor" scoped="" ref="0x7675c510"/>
        <function-ref name="toggle" scoped="" ref="0x7675c5f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7675c6d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7675c7b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7675c890"/>
        <function-ref name="get" scoped="" ref="0x7675c970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7675ca50"/>
        <function-ref name="getRaw" scoped="" ref="0x7675cb30"/>
        <function-ref name="set" scoped="" ref="0x7675cc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7675ccf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7675cdd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7675b010"/>
        <function-ref name="clr" scoped="" ref="0x7675b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x767513e0" loc="149:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x767513e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x767515b8"/>
        <function-ref name="isInput" scoped="" ref="0x76751698"/>
        <function-ref name="setResistor" scoped="" ref="0x76751778"/>
        <function-ref name="toggle" scoped="" ref="0x76751858"/>
        <function-ref name="isOutput" scoped="" ref="0x76751938"/>
        <function-ref name="getResistor" scoped="" ref="0x76751a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x76751af8"/>
        <function-ref name="get" scoped="" ref="0x76751bd8"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76751cb8"/>
        <function-ref name="getRaw" scoped="" ref="0x76751d98"/>
        <function-ref name="set" scoped="" ref="0x76751e78"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76750010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x767500f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76750250"/>
        <function-ref name="clr" scoped="" ref="0x76750330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x76748168" loc="159:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x76748168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76748340"/>
        <function-ref name="isInput" scoped="" ref="0x76748420"/>
        <function-ref name="setResistor" scoped="" ref="0x76748500"/>
        <function-ref name="toggle" scoped="" ref="0x767485e0"/>
        <function-ref name="isOutput" scoped="" ref="0x767486c0"/>
        <function-ref name="getResistor" scoped="" ref="0x767487a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76748880"/>
        <function-ref name="get" scoped="" ref="0x76748960"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76748a40"/>
        <function-ref name="getRaw" scoped="" ref="0x76748b20"/>
        <function-ref name="set" scoped="" ref="0x76748c00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76748ce0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76748dc0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76748f20"/>
        <function-ref name="clr" scoped="" ref="0x76747018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7673c170" loc="171:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7673c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7673c348"/>
        <function-ref name="isInput" scoped="" ref="0x7673c428"/>
        <function-ref name="setResistor" scoped="" ref="0x7673c508"/>
        <function-ref name="toggle" scoped="" ref="0x7673c5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7673c6c8"/>
        <function-ref name="getResistor" scoped="" ref="0x7673c7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7673c888"/>
        <function-ref name="get" scoped="" ref="0x7673c968"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7673ca48"/>
        <function-ref name="getRaw" scoped="" ref="0x7673cb28"/>
        <function-ref name="set" scoped="" ref="0x7673cc08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7673cce8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7673cdc8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7673cf28"/>
        <function-ref name="clr" scoped="" ref="0x7673b018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x76786010" loc="56:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x76786010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x767861e8"/>
        <function-ref name="isInput" scoped="" ref="0x767862c8"/>
        <function-ref name="setResistor" scoped="" ref="0x767863a8"/>
        <function-ref name="toggle" scoped="" ref="0x76786488"/>
        <function-ref name="isOutput" scoped="" ref="0x76786568"/>
        <function-ref name="getResistor" scoped="" ref="0x76786648"/>
        <function-ref name="makeOutput" scoped="" ref="0x76786728"/>
        <function-ref name="get" scoped="" ref="0x76786808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x767868e8"/>
        <function-ref name="getRaw" scoped="" ref="0x767869c8"/>
        <function-ref name="set" scoped="" ref="0x76786aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76786b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76786c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76786dc8"/>
        <function-ref name="clr" scoped="" ref="0x76786ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x767505a0" loc="150:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x767505a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76750778"/>
        <function-ref name="isInput" scoped="" ref="0x76750858"/>
        <function-ref name="setResistor" scoped="" ref="0x76750938"/>
        <function-ref name="toggle" scoped="" ref="0x76750a18"/>
        <function-ref name="isOutput" scoped="" ref="0x76750af8"/>
        <function-ref name="getResistor" scoped="" ref="0x76750bd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x76750cb8"/>
        <function-ref name="get" scoped="" ref="0x76750d98"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76750e78"/>
        <function-ref name="getRaw" scoped="" ref="0x7674f010"/>
        <function-ref name="set" scoped="" ref="0x7674f0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7674f1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7674f2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7674f410"/>
        <function-ref name="clr" scoped="" ref="0x7674f4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x76784368" loc="61:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x76784368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76784540"/>
        <function-ref name="isInput" scoped="" ref="0x76784620"/>
        <function-ref name="setResistor" scoped="" ref="0x76784700"/>
        <function-ref name="toggle" scoped="" ref="0x767847e0"/>
        <function-ref name="isOutput" scoped="" ref="0x767848c0"/>
        <function-ref name="getResistor" scoped="" ref="0x767849a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76784a80"/>
        <function-ref name="get" scoped="" ref="0x76784b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76784c40"/>
        <function-ref name="getRaw" scoped="" ref="0x76784d20"/>
        <function-ref name="set" scoped="" ref="0x76784e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76784ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76783010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76783170"/>
        <function-ref name="clr" scoped="" ref="0x76783250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x767794c8" loc="74:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x767794c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x767796a0"/>
        <function-ref name="isInput" scoped="" ref="0x76779780"/>
        <function-ref name="setResistor" scoped="" ref="0x76779860"/>
        <function-ref name="toggle" scoped="" ref="0x76779940"/>
        <function-ref name="isOutput" scoped="" ref="0x76779a20"/>
        <function-ref name="getResistor" scoped="" ref="0x76779b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x76779be0"/>
        <function-ref name="get" scoped="" ref="0x76779cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76779da0"/>
        <function-ref name="getRaw" scoped="" ref="0x76779e80"/>
        <function-ref name="set" scoped="" ref="0x76778010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767780f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x767781d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76778330"/>
        <function-ref name="clr" scoped="" ref="0x76778410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7676e688" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7676e688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7676e860"/>
        <function-ref name="isInput" scoped="" ref="0x7676e940"/>
        <function-ref name="setResistor" scoped="" ref="0x7676ea20"/>
        <function-ref name="toggle" scoped="" ref="0x7676eb00"/>
        <function-ref name="isOutput" scoped="" ref="0x7676ebe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7676ecc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7676eda0"/>
        <function-ref name="get" scoped="" ref="0x7676ee80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7676d010"/>
        <function-ref name="getRaw" scoped="" ref="0x7676d0f0"/>
        <function-ref name="set" scoped="" ref="0x7676d1d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7676d2b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7676d390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7676d4f0"/>
        <function-ref name="clr" scoped="" ref="0x7676d5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x76762848" loc="100:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x76762848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76762a20"/>
        <function-ref name="isInput" scoped="" ref="0x76762b00"/>
        <function-ref name="setResistor" scoped="" ref="0x76762be0"/>
        <function-ref name="toggle" scoped="" ref="0x76762cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x76762da0"/>
        <function-ref name="getResistor" scoped="" ref="0x76762e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x76761010"/>
        <function-ref name="get" scoped="" ref="0x767610f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x767611d0"/>
        <function-ref name="getRaw" scoped="" ref="0x767612b0"/>
        <function-ref name="set" scoped="" ref="0x76761390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76761470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76761550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x767616b0"/>
        <function-ref name="clr" scoped="" ref="0x76761790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x76759688" loc="111:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x76759688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76759860"/>
        <function-ref name="isInput" scoped="" ref="0x76759940"/>
        <function-ref name="setResistor" scoped="" ref="0x76759a20"/>
        <function-ref name="toggle" scoped="" ref="0x76759b00"/>
        <function-ref name="isOutput" scoped="" ref="0x76759be0"/>
        <function-ref name="getResistor" scoped="" ref="0x76759cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76759da0"/>
        <function-ref name="get" scoped="" ref="0x76759e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76758010"/>
        <function-ref name="getRaw" scoped="" ref="0x767580f0"/>
        <function-ref name="set" scoped="" ref="0x767581d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767582b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76758390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x767584f0"/>
        <function-ref name="clr" scoped="" ref="0x767585d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x76793768" loc="51:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x76793768"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76793940"/>
        <function-ref name="isInput" scoped="" ref="0x76793a20"/>
        <function-ref name="setResistor" scoped="" ref="0x76793b00"/>
        <function-ref name="toggle" scoped="" ref="0x76793be0"/>
        <function-ref name="isOutput" scoped="" ref="0x76793cc0"/>
        <function-ref name="getResistor" scoped="" ref="0x76793da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76793e80"/>
        <function-ref name="get" scoped="" ref="0x7678b010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7678b0f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7678b1d0"/>
        <function-ref name="set" scoped="" ref="0x7678b2b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7678b390"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7678b470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7678b5d0"/>
        <function-ref name="clr" scoped="" ref="0x7678b6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x76781848" loc="64:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x76781848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76781aa0"/>
        <function-ref name="isInput" scoped="" ref="0x76781b80"/>
        <function-ref name="setResistor" scoped="" ref="0x76781c60"/>
        <function-ref name="toggle" scoped="" ref="0x76781d40"/>
        <function-ref name="isOutput" scoped="" ref="0x76781e20"/>
        <function-ref name="getResistor" scoped="" ref="0x76781f00"/>
        <function-ref name="makeOutput" scoped="" ref="0x76780010"/>
        <function-ref name="get" scoped="" ref="0x767800f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x767801d0"/>
        <function-ref name="getRaw" scoped="" ref="0x767802b0"/>
        <function-ref name="set" scoped="" ref="0x76780390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76780470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76780550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x767806b0"/>
        <function-ref name="clr" scoped="" ref="0x76780790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x76776a08" loc="77:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x76776a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76776be0"/>
        <function-ref name="isInput" scoped="" ref="0x76776cc0"/>
        <function-ref name="setResistor" scoped="" ref="0x76776da0"/>
        <function-ref name="toggle" scoped="" ref="0x76776e80"/>
        <function-ref name="isOutput" scoped="" ref="0x76775010"/>
        <function-ref name="getResistor" scoped="" ref="0x767750f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x767751d0"/>
        <function-ref name="get" scoped="" ref="0x767752b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76775390"/>
        <function-ref name="getRaw" scoped="" ref="0x76775470"/>
        <function-ref name="set" scoped="" ref="0x76775550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76775630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76775710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76775870"/>
        <function-ref name="clr" scoped="" ref="0x76775950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x76757bc0" loc="144:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x76757bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76757d98"/>
        <function-ref name="isInput" scoped="" ref="0x76757e78"/>
        <function-ref name="setResistor" scoped="" ref="0x76756010"/>
        <function-ref name="toggle" scoped="" ref="0x767560f0"/>
        <function-ref name="isOutput" scoped="" ref="0x767561d0"/>
        <function-ref name="getResistor" scoped="" ref="0x767562b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76756390"/>
        <function-ref name="get" scoped="" ref="0x76756470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76756550"/>
        <function-ref name="getRaw" scoped="" ref="0x76756630"/>
        <function-ref name="set" scoped="" ref="0x76756710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767567f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x767568d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76756a30"/>
        <function-ref name="clr" scoped="" ref="0x76756b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x76745598" loc="162:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x76745598"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76745770"/>
        <function-ref name="isInput" scoped="" ref="0x76745850"/>
        <function-ref name="setResistor" scoped="" ref="0x76745930"/>
        <function-ref name="toggle" scoped="" ref="0x76745a10"/>
        <function-ref name="isOutput" scoped="" ref="0x76745af0"/>
        <function-ref name="getResistor" scoped="" ref="0x76745bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76745cb0"/>
        <function-ref name="get" scoped="" ref="0x76745d90"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76745e70"/>
        <function-ref name="getRaw" scoped="" ref="0x76744010"/>
        <function-ref name="set" scoped="" ref="0x767440f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767441d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x767442b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76744410"/>
        <function-ref name="clr" scoped="" ref="0x767444f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7673d010" loc="169:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7673d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7673d1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7673d2c8"/>
        <function-ref name="setResistor" scoped="" ref="0x7673d3a8"/>
        <function-ref name="toggle" scoped="" ref="0x7673d488"/>
        <function-ref name="isOutput" scoped="" ref="0x7673d568"/>
        <function-ref name="getResistor" scoped="" ref="0x7673d648"/>
        <function-ref name="makeOutput" scoped="" ref="0x7673d728"/>
        <function-ref name="get" scoped="" ref="0x7673d808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7673d8e8"/>
        <function-ref name="getRaw" scoped="" ref="0x7673d9c8"/>
        <function-ref name="set" scoped="" ref="0x7673daa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7673db88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7673dc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7673ddc8"/>
        <function-ref name="clr" scoped="" ref="0x7673dea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7674cca0" loc="155:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7674cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7674ce78"/>
        <function-ref name="isInput" scoped="" ref="0x7674b010"/>
        <function-ref name="setResistor" scoped="" ref="0x7674b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x7674b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7674b2b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7674b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x7674b470"/>
        <function-ref name="get" scoped="" ref="0x7674b550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7674b630"/>
        <function-ref name="getRaw" scoped="" ref="0x7674b710"/>
        <function-ref name="set" scoped="" ref="0x7674b7f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7674b8d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7674b9b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7674bb10"/>
        <function-ref name="clr" scoped="" ref="0x7674bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x76774d88" loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x76774d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76773070"/>
        <function-ref name="isInput" scoped="" ref="0x76773150"/>
        <function-ref name="setResistor" scoped="" ref="0x76773230"/>
        <function-ref name="toggle" scoped="" ref="0x76773310"/>
        <function-ref name="isOutput" scoped="" ref="0x767733f0"/>
        <function-ref name="getResistor" scoped="" ref="0x767734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x767735b0"/>
        <function-ref name="get" scoped="" ref="0x76773690"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76773770"/>
        <function-ref name="getRaw" scoped="" ref="0x76773850"/>
        <function-ref name="set" scoped="" ref="0x76773930"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76773a10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76773af0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76773c50"/>
        <function-ref name="clr" scoped="" ref="0x76773d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x76768010" loc="95:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x76768010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x767681e8"/>
        <function-ref name="isInput" scoped="" ref="0x767682c8"/>
        <function-ref name="setResistor" scoped="" ref="0x767683a8"/>
        <function-ref name="toggle" scoped="" ref="0x76768488"/>
        <function-ref name="isOutput" scoped="" ref="0x76768568"/>
        <function-ref name="getResistor" scoped="" ref="0x76768648"/>
        <function-ref name="makeOutput" scoped="" ref="0x76768728"/>
        <function-ref name="get" scoped="" ref="0x76768808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x767688e8"/>
        <function-ref name="getRaw" scoped="" ref="0x767689c8"/>
        <function-ref name="set" scoped="" ref="0x76768aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76768b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76768c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76768dc8"/>
        <function-ref name="clr" scoped="" ref="0x76768ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7675fd88" loc="106:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7675fd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7675e010"/>
        <function-ref name="isInput" scoped="" ref="0x7675e0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7675e1d0"/>
        <function-ref name="toggle" scoped="" ref="0x7675e2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7675e390"/>
        <function-ref name="getResistor" scoped="" ref="0x7675e470"/>
        <function-ref name="makeOutput" scoped="" ref="0x7675e550"/>
        <function-ref name="get" scoped="" ref="0x7675e630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7675e710"/>
        <function-ref name="getRaw" scoped="" ref="0x7675e7f0"/>
        <function-ref name="set" scoped="" ref="0x7675e8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7675e9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7675ea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7675ebf0"/>
        <function-ref name="clr" scoped="" ref="0x7675ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x76744758" loc="163:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x76744758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76744930"/>
        <function-ref name="isInput" scoped="" ref="0x76744a10"/>
        <function-ref name="setResistor" scoped="" ref="0x76744af0"/>
        <function-ref name="toggle" scoped="" ref="0x76744bd0"/>
        <function-ref name="isOutput" scoped="" ref="0x76744cb0"/>
        <function-ref name="getResistor" scoped="" ref="0x76744d90"/>
        <function-ref name="makeOutput" scoped="" ref="0x76744e70"/>
        <function-ref name="get" scoped="" ref="0x76743010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x767430f0"/>
        <function-ref name="getRaw" scoped="" ref="0x767431d0"/>
        <function-ref name="set" scoped="" ref="0x767432b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76743390"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76743470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x767435d0"/>
        <function-ref name="clr" scoped="" ref="0x767436b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7674f758" loc="152:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7674f758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7674f930"/>
        <function-ref name="isInput" scoped="" ref="0x7674fa10"/>
        <function-ref name="setResistor" scoped="" ref="0x7674faf0"/>
        <function-ref name="toggle" scoped="" ref="0x7674fbd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7674fcb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7674fd90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7674fe70"/>
        <function-ref name="get" scoped="" ref="0x7674e010"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7674e0f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7674e1d0"/>
        <function-ref name="set" scoped="" ref="0x7674e2b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7674e390"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7674e470"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7674e5d0"/>
        <function-ref name="clr" scoped="" ref="0x7674e6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x76789ca8" loc="54:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x76789ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76789e80"/>
        <function-ref name="isInput" scoped="" ref="0x76788010"/>
        <function-ref name="setResistor" scoped="" ref="0x767880f0"/>
        <function-ref name="toggle" scoped="" ref="0x767881d0"/>
        <function-ref name="isOutput" scoped="" ref="0x767882b0"/>
        <function-ref name="getResistor" scoped="" ref="0x76788390"/>
        <function-ref name="makeOutput" scoped="" ref="0x76788470"/>
        <function-ref name="get" scoped="" ref="0x76788550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76788630"/>
        <function-ref name="getRaw" scoped="" ref="0x76788710"/>
        <function-ref name="set" scoped="" ref="0x767887f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767888d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x767889b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76788b10"/>
        <function-ref name="clr" scoped="" ref="0x76788bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7677ed88" loc="67:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7677ed88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7677d010"/>
        <function-ref name="isInput" scoped="" ref="0x7677d0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7677d1d0"/>
        <function-ref name="toggle" scoped="" ref="0x7677d2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7677d390"/>
        <function-ref name="getResistor" scoped="" ref="0x7677d470"/>
        <function-ref name="makeOutput" scoped="" ref="0x7677d550"/>
        <function-ref name="get" scoped="" ref="0x7677d630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7677d710"/>
        <function-ref name="getRaw" scoped="" ref="0x7677d7f0"/>
        <function-ref name="set" scoped="" ref="0x7677d8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7677d9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7677da90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7677dbf0"/>
        <function-ref name="clr" scoped="" ref="0x7677dcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x76761a08" loc="104:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x76761a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76761be0"/>
        <function-ref name="isInput" scoped="" ref="0x76761cc0"/>
        <function-ref name="setResistor" scoped="" ref="0x76761da0"/>
        <function-ref name="toggle" scoped="" ref="0x76761e80"/>
        <function-ref name="isOutput" scoped="" ref="0x76760010"/>
        <function-ref name="getResistor" scoped="" ref="0x767600f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x767601d0"/>
        <function-ref name="get" scoped="" ref="0x767602b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76760390"/>
        <function-ref name="getRaw" scoped="" ref="0x76760470"/>
        <function-ref name="set" scoped="" ref="0x76760550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76760630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76760710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76760870"/>
        <function-ref name="clr" scoped="" ref="0x76760950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7677b178" loc="72:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7677b178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7677b350"/>
        <function-ref name="isInput" scoped="" ref="0x7677b430"/>
        <function-ref name="setResistor" scoped="" ref="0x7677b510"/>
        <function-ref name="toggle" scoped="" ref="0x7677b5f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7677b6d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7677b7b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7677b890"/>
        <function-ref name="get" scoped="" ref="0x7677b970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7677ba50"/>
        <function-ref name="getRaw" scoped="" ref="0x7677bb30"/>
        <function-ref name="set" scoped="" ref="0x7677bc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7677bcf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7677bdd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7677a010"/>
        <function-ref name="clr" scoped="" ref="0x7677a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x76770368" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x76770368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76770540"/>
        <function-ref name="isInput" scoped="" ref="0x76770620"/>
        <function-ref name="setResistor" scoped="" ref="0x76770700"/>
        <function-ref name="toggle" scoped="" ref="0x767707e0"/>
        <function-ref name="isOutput" scoped="" ref="0x767708c0"/>
        <function-ref name="getResistor" scoped="" ref="0x767709a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76770a80"/>
        <function-ref name="get" scoped="" ref="0x76770b60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76770c40"/>
        <function-ref name="getRaw" scoped="" ref="0x76770d20"/>
        <function-ref name="set" scoped="" ref="0x76770e00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76770ee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7676f010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7676f170"/>
        <function-ref name="clr" scoped="" ref="0x7676f250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x767644c8" loc="98:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x767644c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x767646a0"/>
        <function-ref name="isInput" scoped="" ref="0x76764780"/>
        <function-ref name="setResistor" scoped="" ref="0x76764860"/>
        <function-ref name="toggle" scoped="" ref="0x76764940"/>
        <function-ref name="isOutput" scoped="" ref="0x76764a20"/>
        <function-ref name="getResistor" scoped="" ref="0x76764b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x76764be0"/>
        <function-ref name="get" scoped="" ref="0x76764cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76764da0"/>
        <function-ref name="getRaw" scoped="" ref="0x76764e80"/>
        <function-ref name="set" scoped="" ref="0x76763010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767630f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x767631d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76763330"/>
        <function-ref name="clr" scoped="" ref="0x76763410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7675b368" loc="109:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7675b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7675b540"/>
        <function-ref name="isInput" scoped="" ref="0x7675b620"/>
        <function-ref name="setResistor" scoped="" ref="0x7675b700"/>
        <function-ref name="toggle" scoped="" ref="0x7675b7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7675b8c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7675b9a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7675ba80"/>
        <function-ref name="get" scoped="" ref="0x7675bb60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7675bc40"/>
        <function-ref name="getRaw" scoped="" ref="0x7675bd20"/>
        <function-ref name="set" scoped="" ref="0x7675be00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7675bee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7675a010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7675a170"/>
        <function-ref name="clr" scoped="" ref="0x7675a250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7674dae0" loc="154:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7674dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7674dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7674dd98"/>
        <function-ref name="setResistor" scoped="" ref="0x7674de78"/>
        <function-ref name="toggle" scoped="" ref="0x7674c010"/>
        <function-ref name="isOutput" scoped="" ref="0x7674c0f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7674c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7674c2b0"/>
        <function-ref name="get" scoped="" ref="0x7674c390"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7674c470"/>
        <function-ref name="getRaw" scoped="" ref="0x7674c550"/>
        <function-ref name="set" scoped="" ref="0x7674c630"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7674c710"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7674c7f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7674c950"/>
        <function-ref name="clr" scoped="" ref="0x7674ca30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7678d3c8" loc="49:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7678d3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7678d5a0"/>
        <function-ref name="isInput" scoped="" ref="0x7678d680"/>
        <function-ref name="setResistor" scoped="" ref="0x7678d760"/>
        <function-ref name="toggle" scoped="" ref="0x7678d840"/>
        <function-ref name="isOutput" scoped="" ref="0x7678d920"/>
        <function-ref name="getResistor" scoped="" ref="0x7678da00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7678dae0"/>
        <function-ref name="get" scoped="" ref="0x7678dbc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7678dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7678dd80"/>
        <function-ref name="set" scoped="" ref="0x7678de60"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76794010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x767940f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76794250"/>
        <function-ref name="clr" scoped="" ref="0x76794330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x767834c8" loc="62:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x767834c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x767836a0"/>
        <function-ref name="isInput" scoped="" ref="0x76783780"/>
        <function-ref name="setResistor" scoped="" ref="0x76783860"/>
        <function-ref name="toggle" scoped="" ref="0x76783940"/>
        <function-ref name="isOutput" scoped="" ref="0x76783a20"/>
        <function-ref name="getResistor" scoped="" ref="0x76783b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x76783be0"/>
        <function-ref name="get" scoped="" ref="0x76783cc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76783da0"/>
        <function-ref name="getRaw" scoped="" ref="0x76783e80"/>
        <function-ref name="set" scoped="" ref="0x76782010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767820f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x767821d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76782330"/>
        <function-ref name="clr" scoped="" ref="0x76782410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x76778688" loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x76778688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76778860"/>
        <function-ref name="isInput" scoped="" ref="0x76778940"/>
        <function-ref name="setResistor" scoped="" ref="0x76778a20"/>
        <function-ref name="toggle" scoped="" ref="0x76778b00"/>
        <function-ref name="isOutput" scoped="" ref="0x76778be0"/>
        <function-ref name="getResistor" scoped="" ref="0x76778cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76778da0"/>
        <function-ref name="get" scoped="" ref="0x76778e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76777010"/>
        <function-ref name="getRaw" scoped="" ref="0x767770f0"/>
        <function-ref name="set" scoped="" ref="0x767771d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767772b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76777390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x767774f0"/>
        <function-ref name="clr" scoped="" ref="0x767775d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7676d848" loc="88:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7676d848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7676da20"/>
        <function-ref name="isInput" scoped="" ref="0x7676db00"/>
        <function-ref name="setResistor" scoped="" ref="0x7676dbe0"/>
        <function-ref name="toggle" scoped="" ref="0x7676dcc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7676dda0"/>
        <function-ref name="getResistor" scoped="" ref="0x7676de80"/>
        <function-ref name="makeOutput" scoped="" ref="0x7676c010"/>
        <function-ref name="get" scoped="" ref="0x7676c0f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7676c1d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7676c2b0"/>
        <function-ref name="set" scoped="" ref="0x7676c390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7676c470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7676c550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7676c6b0"/>
        <function-ref name="clr" scoped="" ref="0x7676c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7674be60" loc="156:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7674be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7674a050"/>
        <function-ref name="isInput" scoped="" ref="0x7674a130"/>
        <function-ref name="setResistor" scoped="" ref="0x7674a210"/>
        <function-ref name="toggle" scoped="" ref="0x7674a2f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7674a3d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7674a4b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7674a590"/>
        <function-ref name="get" scoped="" ref="0x7674a670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7674a750"/>
        <function-ref name="getRaw" scoped="" ref="0x7674a830"/>
        <function-ref name="set" scoped="" ref="0x7674a910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7674a9f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7674aad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7674ac30"/>
        <function-ref name="clr" scoped="" ref="0x7674ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x76747280" loc="160:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x76747280"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76747458"/>
        <function-ref name="isInput" scoped="" ref="0x76747538"/>
        <function-ref name="setResistor" scoped="" ref="0x76747618"/>
        <function-ref name="toggle" scoped="" ref="0x767476f8"/>
        <function-ref name="isOutput" scoped="" ref="0x767477d8"/>
        <function-ref name="getResistor" scoped="" ref="0x767478b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x76747998"/>
        <function-ref name="get" scoped="" ref="0x76747a78"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76747b58"/>
        <function-ref name="getRaw" scoped="" ref="0x76747c38"/>
        <function-ref name="set" scoped="" ref="0x76747d18"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76747df8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76747ed8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76746090"/>
        <function-ref name="clr" scoped="" ref="0x76746170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x76741c98" loc="166:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x76741c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76741e70"/>
        <function-ref name="isInput" scoped="" ref="0x76740010"/>
        <function-ref name="setResistor" scoped="" ref="0x767400f0"/>
        <function-ref name="toggle" scoped="" ref="0x767401d0"/>
        <function-ref name="isOutput" scoped="" ref="0x767402b0"/>
        <function-ref name="getResistor" scoped="" ref="0x76740390"/>
        <function-ref name="makeOutput" scoped="" ref="0x76740470"/>
        <function-ref name="get" scoped="" ref="0x76740550"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76740630"/>
        <function-ref name="getRaw" scoped="" ref="0x76740710"/>
        <function-ref name="set" scoped="" ref="0x767407f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767408d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x767409b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76740b10"/>
        <function-ref name="clr" scoped="" ref="0x76740bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7676bbc8" loc="93:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7676bbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7676bda0"/>
        <function-ref name="isInput" scoped="" ref="0x7676be80"/>
        <function-ref name="setResistor" scoped="" ref="0x7676a010"/>
        <function-ref name="toggle" scoped="" ref="0x7676a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7676a1d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7676a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7676a390"/>
        <function-ref name="get" scoped="" ref="0x7676a470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7676a550"/>
        <function-ref name="getRaw" scoped="" ref="0x7676a630"/>
        <function-ref name="set" scoped="" ref="0x7676a710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7676a7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7676a8d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7676aa30"/>
        <function-ref name="clr" scoped="" ref="0x7676ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x76749010" loc="157:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x76749010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x767491e8"/>
        <function-ref name="isInput" scoped="" ref="0x767492c8"/>
        <function-ref name="setResistor" scoped="" ref="0x767493a8"/>
        <function-ref name="toggle" scoped="" ref="0x76749488"/>
        <function-ref name="isOutput" scoped="" ref="0x76749568"/>
        <function-ref name="getResistor" scoped="" ref="0x76749648"/>
        <function-ref name="makeOutput" scoped="" ref="0x76749728"/>
        <function-ref name="get" scoped="" ref="0x76749808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x767498e8"/>
        <function-ref name="getRaw" scoped="" ref="0x767499c8"/>
        <function-ref name="set" scoped="" ref="0x76749aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76749b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76749c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76749dc8"/>
        <function-ref name="clr" scoped="" ref="0x76749ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7678b928" loc="52:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7678b928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7678bb00"/>
        <function-ref name="isInput" scoped="" ref="0x7678bbe0"/>
        <function-ref name="setResistor" scoped="" ref="0x7678bcc0"/>
        <function-ref name="toggle" scoped="" ref="0x7678bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7678be80"/>
        <function-ref name="getResistor" scoped="" ref="0x7678a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7678a0f0"/>
        <function-ref name="get" scoped="" ref="0x7678a1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7678a2b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7678a390"/>
        <function-ref name="set" scoped="" ref="0x7678a470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7678a550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7678a630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7678a790"/>
        <function-ref name="clr" scoped="" ref="0x7678a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x76780a08" loc="65:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x76780a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76780be0"/>
        <function-ref name="isInput" scoped="" ref="0x76780cc0"/>
        <function-ref name="setResistor" scoped="" ref="0x76780da0"/>
        <function-ref name="toggle" scoped="" ref="0x76780e80"/>
        <function-ref name="isOutput" scoped="" ref="0x7677f010"/>
        <function-ref name="getResistor" scoped="" ref="0x7677f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7677f1d0"/>
        <function-ref name="get" scoped="" ref="0x7677f2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7677f390"/>
        <function-ref name="getRaw" scoped="" ref="0x7677f470"/>
        <function-ref name="set" scoped="" ref="0x7677f550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7677f630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7677f710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7677f870"/>
        <function-ref name="clr" scoped="" ref="0x7677f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x76775bc8" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x76775bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76775da0"/>
        <function-ref name="isInput" scoped="" ref="0x76775e80"/>
        <function-ref name="setResistor" scoped="" ref="0x76774010"/>
        <function-ref name="toggle" scoped="" ref="0x767740f0"/>
        <function-ref name="isOutput" scoped="" ref="0x767741d0"/>
        <function-ref name="getResistor" scoped="" ref="0x767742b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76774390"/>
        <function-ref name="get" scoped="" ref="0x76774470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76774550"/>
        <function-ref name="getRaw" scoped="" ref="0x76774630"/>
        <function-ref name="set" scoped="" ref="0x76774710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767747f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x767748d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76774a30"/>
        <function-ref name="clr" scoped="" ref="0x76774b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7674e920" loc="153:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7674e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7674eaf8"/>
        <function-ref name="isInput" scoped="" ref="0x7674ebd8"/>
        <function-ref name="setResistor" scoped="" ref="0x7674ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x7674ed98"/>
        <function-ref name="isOutput" scoped="" ref="0x7674ee78"/>
        <function-ref name="getResistor" scoped="" ref="0x7674d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7674d0f0"/>
        <function-ref name="get" scoped="" ref="0x7674d1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7674d2b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7674d390"/>
        <function-ref name="set" scoped="" ref="0x7674d470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7674d550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7674d630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7674d790"/>
        <function-ref name="clr" scoped="" ref="0x7674d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x76743918" loc="164:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x76743918"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76743af0"/>
        <function-ref name="isInput" scoped="" ref="0x76743bd0"/>
        <function-ref name="setResistor" scoped="" ref="0x76743cb0"/>
        <function-ref name="toggle" scoped="" ref="0x76743d90"/>
        <function-ref name="isOutput" scoped="" ref="0x76743e70"/>
        <function-ref name="getResistor" scoped="" ref="0x76742010"/>
        <function-ref name="makeOutput" scoped="" ref="0x767420f0"/>
        <function-ref name="get" scoped="" ref="0x767421d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x767422b0"/>
        <function-ref name="getRaw" scoped="" ref="0x76742390"/>
        <function-ref name="set" scoped="" ref="0x76742470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76742550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76742630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76742790"/>
        <function-ref name="clr" scoped="" ref="0x76742870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x76772010" loc="83:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x76772010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x767721e8"/>
        <function-ref name="isInput" scoped="" ref="0x767722c8"/>
        <function-ref name="setResistor" scoped="" ref="0x767723a8"/>
        <function-ref name="toggle" scoped="" ref="0x76772488"/>
        <function-ref name="isOutput" scoped="" ref="0x76772568"/>
        <function-ref name="getResistor" scoped="" ref="0x76772648"/>
        <function-ref name="makeOutput" scoped="" ref="0x76772728"/>
        <function-ref name="get" scoped="" ref="0x76772808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x767728e8"/>
        <function-ref name="getRaw" scoped="" ref="0x767729c8"/>
        <function-ref name="set" scoped="" ref="0x76772aa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76772b88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76772c68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76772dc8"/>
        <function-ref name="clr" scoped="" ref="0x76772ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x76766178" loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x76766178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76766350"/>
        <function-ref name="isInput" scoped="" ref="0x76766430"/>
        <function-ref name="setResistor" scoped="" ref="0x76766510"/>
        <function-ref name="toggle" scoped="" ref="0x767665f0"/>
        <function-ref name="isOutput" scoped="" ref="0x767666d0"/>
        <function-ref name="getResistor" scoped="" ref="0x767667b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76766890"/>
        <function-ref name="get" scoped="" ref="0x76766970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76766a50"/>
        <function-ref name="getRaw" scoped="" ref="0x76766b30"/>
        <function-ref name="set" scoped="" ref="0x76766c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76766cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76766dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76765010"/>
        <function-ref name="clr" scoped="" ref="0x767650f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7675d010" loc="107:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7675d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7675d1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7675d2c8"/>
        <function-ref name="setResistor" scoped="" ref="0x7675d3a8"/>
        <function-ref name="toggle" scoped="" ref="0x7675d488"/>
        <function-ref name="isOutput" scoped="" ref="0x7675d568"/>
        <function-ref name="getResistor" scoped="" ref="0x7675d648"/>
        <function-ref name="makeOutput" scoped="" ref="0x7675d728"/>
        <function-ref name="get" scoped="" ref="0x7675d808"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7675d8e8"/>
        <function-ref name="getRaw" scoped="" ref="0x7675d9c8"/>
        <function-ref name="set" scoped="" ref="0x7675daa8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7675db88"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7675dc68"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7675ddc8"/>
        <function-ref name="clr" scoped="" ref="0x7675dea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x76788e68" loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x76788e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76787050"/>
        <function-ref name="isInput" scoped="" ref="0x76787130"/>
        <function-ref name="setResistor" scoped="" ref="0x76787210"/>
        <function-ref name="toggle" scoped="" ref="0x767872f0"/>
        <function-ref name="isOutput" scoped="" ref="0x767873d0"/>
        <function-ref name="getResistor" scoped="" ref="0x767874b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76787590"/>
        <function-ref name="get" scoped="" ref="0x76787670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76787750"/>
        <function-ref name="getRaw" scoped="" ref="0x76787830"/>
        <function-ref name="set" scoped="" ref="0x76787910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767879f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76787ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76787c30"/>
        <function-ref name="clr" scoped="" ref="0x76787d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x76760bc8" loc="105:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x76760bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76760da0"/>
        <function-ref name="isInput" scoped="" ref="0x76760e80"/>
        <function-ref name="setResistor" scoped="" ref="0x7675f010"/>
        <function-ref name="toggle" scoped="" ref="0x7675f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7675f1d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7675f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7675f390"/>
        <function-ref name="get" scoped="" ref="0x7675f470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7675f550"/>
        <function-ref name="getRaw" scoped="" ref="0x7675f630"/>
        <function-ref name="set" scoped="" ref="0x7675f710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7675f7f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7675f8d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7675fa30"/>
        <function-ref name="clr" scoped="" ref="0x7675fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x76785178" loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x76785178"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76785350"/>
        <function-ref name="isInput" scoped="" ref="0x76785430"/>
        <function-ref name="setResistor" scoped="" ref="0x76785510"/>
        <function-ref name="toggle" scoped="" ref="0x767855f0"/>
        <function-ref name="isOutput" scoped="" ref="0x767856d0"/>
        <function-ref name="getResistor" scoped="" ref="0x767857b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76785890"/>
        <function-ref name="get" scoped="" ref="0x76785970"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76785a50"/>
        <function-ref name="getRaw" scoped="" ref="0x76785b30"/>
        <function-ref name="set" scoped="" ref="0x76785c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76785cf0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76785dd0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76784010"/>
        <function-ref name="clr" scoped="" ref="0x767840f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7677a368" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7677a368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7677a540"/>
        <function-ref name="isInput" scoped="" ref="0x7677a620"/>
        <function-ref name="setResistor" scoped="" ref="0x7677a700"/>
        <function-ref name="toggle" scoped="" ref="0x7677a7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7677a8c0"/>
        <function-ref name="getResistor" scoped="" ref="0x7677a9a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7677aa80"/>
        <function-ref name="get" scoped="" ref="0x7677ab60"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7677ac40"/>
        <function-ref name="getRaw" scoped="" ref="0x7677ad20"/>
        <function-ref name="set" scoped="" ref="0x7677ae00"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7677aee0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76779010"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76779170"/>
        <function-ref name="clr" scoped="" ref="0x76779250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7676f4c8" loc="86:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7676f4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7676f6a0"/>
        <function-ref name="isInput" scoped="" ref="0x7676f780"/>
        <function-ref name="setResistor" scoped="" ref="0x7676f860"/>
        <function-ref name="toggle" scoped="" ref="0x7676f940"/>
        <function-ref name="isOutput" scoped="" ref="0x7676fa20"/>
        <function-ref name="getResistor" scoped="" ref="0x7676fb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7676fbe0"/>
        <function-ref name="get" scoped="" ref="0x7676fcc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7676fda0"/>
        <function-ref name="getRaw" scoped="" ref="0x7676fe80"/>
        <function-ref name="set" scoped="" ref="0x7676e010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7676e0f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7676e1d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7676e330"/>
        <function-ref name="clr" scoped="" ref="0x7676e410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x76763688" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x76763688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76763860"/>
        <function-ref name="isInput" scoped="" ref="0x76763940"/>
        <function-ref name="setResistor" scoped="" ref="0x76763a20"/>
        <function-ref name="toggle" scoped="" ref="0x76763b00"/>
        <function-ref name="isOutput" scoped="" ref="0x76763be0"/>
        <function-ref name="getResistor" scoped="" ref="0x76763cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76763da0"/>
        <function-ref name="get" scoped="" ref="0x76763e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76762010"/>
        <function-ref name="getRaw" scoped="" ref="0x767620f0"/>
        <function-ref name="set" scoped="" ref="0x767621d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767622b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76762390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x767624f0"/>
        <function-ref name="clr" scoped="" ref="0x767625d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7675a4c8" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7675a4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7675a6a0"/>
        <function-ref name="isInput" scoped="" ref="0x7675a780"/>
        <function-ref name="setResistor" scoped="" ref="0x7675a860"/>
        <function-ref name="toggle" scoped="" ref="0x7675a940"/>
        <function-ref name="isOutput" scoped="" ref="0x7675aa20"/>
        <function-ref name="getResistor" scoped="" ref="0x7675ab00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7675abe0"/>
        <function-ref name="get" scoped="" ref="0x7675acc0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7675ada0"/>
        <function-ref name="getRaw" scoped="" ref="0x7675ae80"/>
        <function-ref name="set" scoped="" ref="0x76759010"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767590f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x767591d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76759330"/>
        <function-ref name="clr" scoped="" ref="0x76759410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x767945a8" loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x767945a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76794780"/>
        <function-ref name="isInput" scoped="" ref="0x76794860"/>
        <function-ref name="setResistor" scoped="" ref="0x76794940"/>
        <function-ref name="toggle" scoped="" ref="0x76794a20"/>
        <function-ref name="isOutput" scoped="" ref="0x76794b00"/>
        <function-ref name="getResistor" scoped="" ref="0x76794be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76794cc0"/>
        <function-ref name="get" scoped="" ref="0x76794da0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76794e80"/>
        <function-ref name="getRaw" scoped="" ref="0x76793010"/>
        <function-ref name="set" scoped="" ref="0x767930f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767931d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x767932b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76793410"/>
        <function-ref name="clr" scoped="" ref="0x767934f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x76782688" loc="63:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x76782688"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76782860"/>
        <function-ref name="isInput" scoped="" ref="0x76782940"/>
        <function-ref name="setResistor" scoped="" ref="0x76782a20"/>
        <function-ref name="toggle" scoped="" ref="0x76782b00"/>
        <function-ref name="isOutput" scoped="" ref="0x76782be0"/>
        <function-ref name="getResistor" scoped="" ref="0x76782cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76782da0"/>
        <function-ref name="get" scoped="" ref="0x76782e80"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76781010"/>
        <function-ref name="getRaw" scoped="" ref="0x767810f0"/>
        <function-ref name="set" scoped="" ref="0x767811d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767812b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76781390"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x767814f0"/>
        <function-ref name="clr" scoped="" ref="0x767815d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x76777848" loc="76:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x76777848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76777a20"/>
        <function-ref name="isInput" scoped="" ref="0x76777b00"/>
        <function-ref name="setResistor" scoped="" ref="0x76777be0"/>
        <function-ref name="toggle" scoped="" ref="0x76777cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x76777da0"/>
        <function-ref name="getResistor" scoped="" ref="0x76777e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x76776010"/>
        <function-ref name="get" scoped="" ref="0x767760f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x767761d0"/>
        <function-ref name="getRaw" scoped="" ref="0x767762b0"/>
        <function-ref name="set" scoped="" ref="0x76776390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76776470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76776550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x767766b0"/>
        <function-ref name="clr" scoped="" ref="0x76776790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7676ca08" loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7676ca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7676cbe0"/>
        <function-ref name="isInput" scoped="" ref="0x7676ccc0"/>
        <function-ref name="setResistor" scoped="" ref="0x7676cda0"/>
        <function-ref name="toggle" scoped="" ref="0x7676ce80"/>
        <function-ref name="isOutput" scoped="" ref="0x7676b010"/>
        <function-ref name="getResistor" scoped="" ref="0x7676b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7676b1d0"/>
        <function-ref name="get" scoped="" ref="0x7676b2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7676b390"/>
        <function-ref name="getRaw" scoped="" ref="0x7676b470"/>
        <function-ref name="set" scoped="" ref="0x7676b550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7676b630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7676b710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7676b870"/>
        <function-ref name="clr" scoped="" ref="0x7676b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x76752270" loc="148:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x76752270"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76752448"/>
        <function-ref name="isInput" scoped="" ref="0x76752528"/>
        <function-ref name="setResistor" scoped="" ref="0x76752608"/>
        <function-ref name="toggle" scoped="" ref="0x767526e8"/>
        <function-ref name="isOutput" scoped="" ref="0x767527c8"/>
        <function-ref name="getResistor" scoped="" ref="0x767528a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x76752988"/>
        <function-ref name="get" scoped="" ref="0x76752a68"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76752b48"/>
        <function-ref name="getRaw" scoped="" ref="0x76752c28"/>
        <function-ref name="set" scoped="" ref="0x76752d08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76752de8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76752ec8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76751090"/>
        <function-ref name="clr" scoped="" ref="0x76751170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x767463d8" loc="161:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x767463d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x767465b0"/>
        <function-ref name="isInput" scoped="" ref="0x76746690"/>
        <function-ref name="setResistor" scoped="" ref="0x76746770"/>
        <function-ref name="toggle" scoped="" ref="0x76746850"/>
        <function-ref name="isOutput" scoped="" ref="0x76746930"/>
        <function-ref name="getResistor" scoped="" ref="0x76746a10"/>
        <function-ref name="makeOutput" scoped="" ref="0x76746af0"/>
        <function-ref name="get" scoped="" ref="0x76746bd0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76746cb0"/>
        <function-ref name="getRaw" scoped="" ref="0x76746d90"/>
        <function-ref name="set" scoped="" ref="0x76746e70"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76745010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x767450f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76745250"/>
        <function-ref name="clr" scoped="" ref="0x76745330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x76753170" loc="147:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x76753170"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76753348"/>
        <function-ref name="isInput" scoped="" ref="0x76753428"/>
        <function-ref name="setResistor" scoped="" ref="0x76753508"/>
        <function-ref name="toggle" scoped="" ref="0x767535e8"/>
        <function-ref name="isOutput" scoped="" ref="0x767536c8"/>
        <function-ref name="getResistor" scoped="" ref="0x767537a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x76753888"/>
        <function-ref name="get" scoped="" ref="0x76753968"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76753a48"/>
        <function-ref name="getRaw" scoped="" ref="0x76753b28"/>
        <function-ref name="set" scoped="" ref="0x76753c08"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76753ce8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76753dc8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76753f28"/>
        <function-ref name="clr" scoped="" ref="0x76752018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7676ad88" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7676ad88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76769010"/>
        <function-ref name="isInput" scoped="" ref="0x767690f0"/>
        <function-ref name="setResistor" scoped="" ref="0x767691d0"/>
        <function-ref name="toggle" scoped="" ref="0x767692b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76769390"/>
        <function-ref name="getResistor" scoped="" ref="0x76769470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76769550"/>
        <function-ref name="get" scoped="" ref="0x76769630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76769710"/>
        <function-ref name="getRaw" scoped="" ref="0x767697f0"/>
        <function-ref name="set" scoped="" ref="0x767698d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767699b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76769a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76769bf0"/>
        <function-ref name="clr" scoped="" ref="0x76769cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x76740e58" loc="168:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x76740e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7673f050"/>
        <function-ref name="isInput" scoped="" ref="0x7673f130"/>
        <function-ref name="setResistor" scoped="" ref="0x7673f210"/>
        <function-ref name="toggle" scoped="" ref="0x7673f2f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7673f3d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7673f4b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7673f590"/>
        <function-ref name="get" scoped="" ref="0x7673f670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7673f750"/>
        <function-ref name="getRaw" scoped="" ref="0x7673f830"/>
        <function-ref name="set" scoped="" ref="0x7673f910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7673f9f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7673fad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7673fc30"/>
        <function-ref name="clr" scoped="" ref="0x7673fd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7673b290" loc="172:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7673b290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7673b468"/>
        <function-ref name="isInput" scoped="" ref="0x7673b548"/>
        <function-ref name="setResistor" scoped="" ref="0x7673b628"/>
        <function-ref name="toggle" scoped="" ref="0x7673b708"/>
        <function-ref name="isOutput" scoped="" ref="0x7673b7e8"/>
        <function-ref name="getResistor" scoped="" ref="0x7673b8c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7673b9a8"/>
        <function-ref name="get" scoped="" ref="0x7673ba88"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7673bb68"/>
        <function-ref name="getRaw" scoped="" ref="0x7673bc48"/>
        <function-ref name="set" scoped="" ref="0x7673bd28"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7673be08"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7673bee8"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7673a090"/>
        <function-ref name="clr" scoped="" ref="0x7673a170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x76758868" loc="143:../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x76758868"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76758c40"/>
        <function-ref name="isInput" scoped="" ref="0x76758d20"/>
        <function-ref name="setResistor" scoped="" ref="0x76758e00"/>
        <function-ref name="toggle" scoped="" ref="0x76758ee0"/>
        <function-ref name="isOutput" scoped="" ref="0x76757010"/>
        <function-ref name="getResistor" scoped="" ref="0x767570f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x767571d0"/>
        <function-ref name="get" scoped="" ref="0x767572b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76757390"/>
        <function-ref name="getRaw" scoped="" ref="0x76757470"/>
        <function-ref name="set" scoped="" ref="0x76757550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76757630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76757710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76757870"/>
        <function-ref name="clr" scoped="" ref="0x76757950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x767383a8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x767383a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76738580"/>
        <function-ref name="isInput" scoped="" ref="0x76738660"/>
        <function-ref name="setResistor" scoped="" ref="0x76738740"/>
        <function-ref name="toggle" scoped="" ref="0x76738820"/>
        <function-ref name="isOutput" scoped="" ref="0x76738900"/>
        <function-ref name="getResistor" scoped="" ref="0x767389e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76738ac0"/>
        <function-ref name="get" scoped="" ref="0x76738ba0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76738c80"/>
        <function-ref name="getRaw" scoped="" ref="0x76738d60"/>
        <function-ref name="set" scoped="" ref="0x76738e40"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76738f20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76722018"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76722178"/>
        <function-ref name="clr" scoped="" ref="0x76722258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76721aa0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76721aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76721c78"/>
        <function-ref name="isInput" scoped="" ref="0x76721d58"/>
        <function-ref name="setResistor" scoped="" ref="0x76721e38"/>
        <function-ref name="toggle" scoped="" ref="0x76721f18"/>
        <function-ref name="isOutput" scoped="" ref="0x7671f010"/>
        <function-ref name="getResistor" scoped="" ref="0x7671f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7671f1d0"/>
        <function-ref name="get" scoped="" ref="0x7671f2b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7671f390"/>
        <function-ref name="getRaw" scoped="" ref="0x7671f470"/>
        <function-ref name="set" scoped="" ref="0x7671f550"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7671f630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7671f710"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7671f870"/>
        <function-ref name="clr" scoped="" ref="0x7671f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7671d220" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7671d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7671d3f8"/>
        <function-ref name="isInput" scoped="" ref="0x7671d4d8"/>
        <function-ref name="setResistor" scoped="" ref="0x7671d5b8"/>
        <function-ref name="toggle" scoped="" ref="0x7671d698"/>
        <function-ref name="isOutput" scoped="" ref="0x7671d778"/>
        <function-ref name="getResistor" scoped="" ref="0x7671d858"/>
        <function-ref name="makeOutput" scoped="" ref="0x7671d938"/>
        <function-ref name="get" scoped="" ref="0x7671da18"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7671daf8"/>
        <function-ref name="getRaw" scoped="" ref="0x7671dbd8"/>
        <function-ref name="set" scoped="" ref="0x7671dcb8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7671dd98"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7671de78"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7671c010"/>
        <function-ref name="clr" scoped="" ref="0x7671c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7671b948" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7671b948"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7671bb20"/>
        <function-ref name="isInput" scoped="" ref="0x7671bc00"/>
        <function-ref name="setResistor" scoped="" ref="0x7671bce0"/>
        <function-ref name="toggle" scoped="" ref="0x7671bdc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7671bea0"/>
        <function-ref name="getResistor" scoped="" ref="0x7671a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x7671a0f0"/>
        <function-ref name="get" scoped="" ref="0x7671a1d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7671a2b0"/>
        <function-ref name="getRaw" scoped="" ref="0x7671a390"/>
        <function-ref name="set" scoped="" ref="0x7671a470"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7671a550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7671a630"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7671a790"/>
        <function-ref name="clr" scoped="" ref="0x7671a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76718148" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76718148"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76718320"/>
        <function-ref name="isInput" scoped="" ref="0x76718400"/>
        <function-ref name="setResistor" scoped="" ref="0x767184e0"/>
        <function-ref name="toggle" scoped="" ref="0x767185c0"/>
        <function-ref name="isOutput" scoped="" ref="0x767186a0"/>
        <function-ref name="getResistor" scoped="" ref="0x76718780"/>
        <function-ref name="makeOutput" scoped="" ref="0x76718860"/>
        <function-ref name="get" scoped="" ref="0x76718940"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76718a20"/>
        <function-ref name="getRaw" scoped="" ref="0x76718b00"/>
        <function-ref name="set" scoped="" ref="0x76718be0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76718cc0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76718da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76718f00"/>
        <function-ref name="clr" scoped="" ref="0x76717010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x767168a0" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x767168a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76716a78"/>
        <function-ref name="isInput" scoped="" ref="0x76716b58"/>
        <function-ref name="setResistor" scoped="" ref="0x76716c38"/>
        <function-ref name="toggle" scoped="" ref="0x76716d18"/>
        <function-ref name="isOutput" scoped="" ref="0x76716df8"/>
        <function-ref name="getResistor" scoped="" ref="0x76716ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x76715010"/>
        <function-ref name="get" scoped="" ref="0x767150f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x767151d0"/>
        <function-ref name="getRaw" scoped="" ref="0x767152b0"/>
        <function-ref name="set" scoped="" ref="0x76715390"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76715470"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76715550"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x767156b0"/>
        <function-ref name="clr" scoped="" ref="0x76715790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76713030" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76713030"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76713208"/>
        <function-ref name="isInput" scoped="" ref="0x767132e8"/>
        <function-ref name="setResistor" scoped="" ref="0x767133c8"/>
        <function-ref name="toggle" scoped="" ref="0x767134a8"/>
        <function-ref name="isOutput" scoped="" ref="0x76713588"/>
        <function-ref name="getResistor" scoped="" ref="0x76713668"/>
        <function-ref name="makeOutput" scoped="" ref="0x76713748"/>
        <function-ref name="get" scoped="" ref="0x76713828"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76713908"/>
        <function-ref name="getRaw" scoped="" ref="0x767139e8"/>
        <function-ref name="set" scoped="" ref="0x76713ac8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76713ba8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76713c88"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76713de8"/>
        <function-ref name="clr" scoped="" ref="0x76713ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76711730" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76711730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76711908"/>
        <function-ref name="isInput" scoped="" ref="0x767119e8"/>
        <function-ref name="setResistor" scoped="" ref="0x76711ac8"/>
        <function-ref name="toggle" scoped="" ref="0x76711ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x76711c88"/>
        <function-ref name="getResistor" scoped="" ref="0x76711d68"/>
        <function-ref name="makeOutput" scoped="" ref="0x76711e48"/>
        <function-ref name="get" scoped="" ref="0x76711f28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76710018"/>
        <function-ref name="getRaw" scoped="" ref="0x767100f8"/>
        <function-ref name="set" scoped="" ref="0x767101d8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767102b8"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76710398"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x767104f8"/>
        <function-ref name="clr" scoped="" ref="0x767105d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7670fe50" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7670fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7670e050"/>
        <function-ref name="isInput" scoped="" ref="0x7670e130"/>
        <function-ref name="setResistor" scoped="" ref="0x7670e210"/>
        <function-ref name="toggle" scoped="" ref="0x7670e2f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7670e3d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7670e4b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7670e590"/>
        <function-ref name="get" scoped="" ref="0x7670e670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7670e750"/>
        <function-ref name="getRaw" scoped="" ref="0x7670e830"/>
        <function-ref name="set" scoped="" ref="0x7670e910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7670e9f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7670ead0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7670ec30"/>
        <function-ref name="clr" scoped="" ref="0x7670ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7670c5f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7670c5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7670c7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7670c8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7670c990"/>
        <function-ref name="toggle" scoped="" ref="0x7670ca70"/>
        <function-ref name="isOutput" scoped="" ref="0x7670cb50"/>
        <function-ref name="getResistor" scoped="" ref="0x7670cc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7670cd10"/>
        <function-ref name="get" scoped="" ref="0x7670cdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7670ced0"/>
        <function-ref name="getRaw" scoped="" ref="0x7670b010"/>
        <function-ref name="set" scoped="" ref="0x7670b0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7670b1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7670b2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7670b410"/>
        <function-ref name="clr" scoped="" ref="0x7670b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7670ad68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7670ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76709010"/>
        <function-ref name="isInput" scoped="" ref="0x767090f0"/>
        <function-ref name="setResistor" scoped="" ref="0x767091d0"/>
        <function-ref name="toggle" scoped="" ref="0x767092b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76709390"/>
        <function-ref name="getResistor" scoped="" ref="0x76709470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76709550"/>
        <function-ref name="get" scoped="" ref="0x76709630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76709710"/>
        <function-ref name="getRaw" scoped="" ref="0x767097f0"/>
        <function-ref name="set" scoped="" ref="0x767098d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767099b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76709a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76709bf0"/>
        <function-ref name="clr" scoped="" ref="0x76709cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x767075f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x767075f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x767077d0"/>
        <function-ref name="isInput" scoped="" ref="0x767078b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76707990"/>
        <function-ref name="toggle" scoped="" ref="0x76707a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76707b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76707c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76707d10"/>
        <function-ref name="get" scoped="" ref="0x76707df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76707ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76706010"/>
        <function-ref name="set" scoped="" ref="0x767060f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767061d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x767062b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76706410"/>
        <function-ref name="clr" scoped="" ref="0x767064f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x76705de8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x76705de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76704010"/>
        <function-ref name="isInput" scoped="" ref="0x767040f0"/>
        <function-ref name="setResistor" scoped="" ref="0x767041d0"/>
        <function-ref name="toggle" scoped="" ref="0x767042b0"/>
        <function-ref name="isOutput" scoped="" ref="0x76704390"/>
        <function-ref name="getResistor" scoped="" ref="0x76704470"/>
        <function-ref name="makeOutput" scoped="" ref="0x76704550"/>
        <function-ref name="get" scoped="" ref="0x76704630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76704710"/>
        <function-ref name="getRaw" scoped="" ref="0x767047f0"/>
        <function-ref name="set" scoped="" ref="0x767048d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767049b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x76704a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76704bf0"/>
        <function-ref name="clr" scoped="" ref="0x76704cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x767025f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x767025f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x767027d0"/>
        <function-ref name="isInput" scoped="" ref="0x767028b0"/>
        <function-ref name="setResistor" scoped="" ref="0x76702990"/>
        <function-ref name="toggle" scoped="" ref="0x76702a70"/>
        <function-ref name="isOutput" scoped="" ref="0x76702b50"/>
        <function-ref name="getResistor" scoped="" ref="0x76702c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x76702d10"/>
        <function-ref name="get" scoped="" ref="0x76702df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76702ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x76700010"/>
        <function-ref name="set" scoped="" ref="0x767000f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x767001d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x767002b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76700410"/>
        <function-ref name="clr" scoped="" ref="0x767004f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766ffd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766ffd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766fe010"/>
        <function-ref name="isInput" scoped="" ref="0x766fe0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x766fe1d0"/>
        <function-ref name="toggle" scoped="" ref="0x766fe2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x766fe390"/>
        <function-ref name="getResistor" scoped="" ref="0x766fe470"/>
        <function-ref name="makeOutput" scoped="" ref="0x766fe550"/>
        <function-ref name="get" scoped="" ref="0x766fe630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766fe710"/>
        <function-ref name="getRaw" scoped="" ref="0x766fe7f0"/>
        <function-ref name="set" scoped="" ref="0x766fe8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766fe9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766fea90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766febf0"/>
        <function-ref name="clr" scoped="" ref="0x766fecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766fc5f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766fc5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766fc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x766fc8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x766fc990"/>
        <function-ref name="toggle" scoped="" ref="0x766fca70"/>
        <function-ref name="isOutput" scoped="" ref="0x766fcb50"/>
        <function-ref name="getResistor" scoped="" ref="0x766fcc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x766fcd10"/>
        <function-ref name="get" scoped="" ref="0x766fcdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766fced0"/>
        <function-ref name="getRaw" scoped="" ref="0x766fb010"/>
        <function-ref name="set" scoped="" ref="0x766fb0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766fb1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766fb2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766fb410"/>
        <function-ref name="clr" scoped="" ref="0x766fb4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766fad68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766fad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766f9010"/>
        <function-ref name="isInput" scoped="" ref="0x766f90f0"/>
        <function-ref name="setResistor" scoped="" ref="0x766f91d0"/>
        <function-ref name="toggle" scoped="" ref="0x766f92b0"/>
        <function-ref name="isOutput" scoped="" ref="0x766f9390"/>
        <function-ref name="getResistor" scoped="" ref="0x766f9470"/>
        <function-ref name="makeOutput" scoped="" ref="0x766f9550"/>
        <function-ref name="get" scoped="" ref="0x766f9630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766f9710"/>
        <function-ref name="getRaw" scoped="" ref="0x766f97f0"/>
        <function-ref name="set" scoped="" ref="0x766f98d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766f99b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766f9a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766f9bf0"/>
        <function-ref name="clr" scoped="" ref="0x766f9cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766f75f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766f75f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766f77d0"/>
        <function-ref name="isInput" scoped="" ref="0x766f78b0"/>
        <function-ref name="setResistor" scoped="" ref="0x766f7990"/>
        <function-ref name="toggle" scoped="" ref="0x766f7a70"/>
        <function-ref name="isOutput" scoped="" ref="0x766f7b50"/>
        <function-ref name="getResistor" scoped="" ref="0x766f7c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x766f7d10"/>
        <function-ref name="get" scoped="" ref="0x766f7df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766f7ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x766f6010"/>
        <function-ref name="set" scoped="" ref="0x766f60f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766f61d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766f62b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766f6410"/>
        <function-ref name="clr" scoped="" ref="0x766f64f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766f5d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766f5d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766f4010"/>
        <function-ref name="isInput" scoped="" ref="0x766f40f0"/>
        <function-ref name="setResistor" scoped="" ref="0x766f41d0"/>
        <function-ref name="toggle" scoped="" ref="0x766f42b0"/>
        <function-ref name="isOutput" scoped="" ref="0x766f4390"/>
        <function-ref name="getResistor" scoped="" ref="0x766f4470"/>
        <function-ref name="makeOutput" scoped="" ref="0x766f4550"/>
        <function-ref name="get" scoped="" ref="0x766f4630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766f4710"/>
        <function-ref name="getRaw" scoped="" ref="0x766f47f0"/>
        <function-ref name="set" scoped="" ref="0x766f48d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766f49b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766f4a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766f4bf0"/>
        <function-ref name="clr" scoped="" ref="0x766f4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766f25f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766f25f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766f27d0"/>
        <function-ref name="isInput" scoped="" ref="0x766f28b0"/>
        <function-ref name="setResistor" scoped="" ref="0x766f2990"/>
        <function-ref name="toggle" scoped="" ref="0x766f2a70"/>
        <function-ref name="isOutput" scoped="" ref="0x766f2b50"/>
        <function-ref name="getResistor" scoped="" ref="0x766f2c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x766f2d10"/>
        <function-ref name="get" scoped="" ref="0x766f2df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766f2ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x766f1010"/>
        <function-ref name="set" scoped="" ref="0x766f10f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766f11d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766f12b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766f1410"/>
        <function-ref name="clr" scoped="" ref="0x766f14f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766f0d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766f0d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766ef010"/>
        <function-ref name="isInput" scoped="" ref="0x766ef0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x766ef1d0"/>
        <function-ref name="toggle" scoped="" ref="0x766ef2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x766ef390"/>
        <function-ref name="getResistor" scoped="" ref="0x766ef470"/>
        <function-ref name="makeOutput" scoped="" ref="0x766ef550"/>
        <function-ref name="get" scoped="" ref="0x766ef630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766ef710"/>
        <function-ref name="getRaw" scoped="" ref="0x766ef7f0"/>
        <function-ref name="set" scoped="" ref="0x766ef8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766ef9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766efa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766efbf0"/>
        <function-ref name="clr" scoped="" ref="0x766efcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766ed5f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766ed5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766ed7d0"/>
        <function-ref name="isInput" scoped="" ref="0x766ed8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x766ed990"/>
        <function-ref name="toggle" scoped="" ref="0x766eda70"/>
        <function-ref name="isOutput" scoped="" ref="0x766edb50"/>
        <function-ref name="getResistor" scoped="" ref="0x766edc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x766edd10"/>
        <function-ref name="get" scoped="" ref="0x766eddf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766eded0"/>
        <function-ref name="getRaw" scoped="" ref="0x766ec010"/>
        <function-ref name="set" scoped="" ref="0x766ec0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766ec1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766ec2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766ec410"/>
        <function-ref name="clr" scoped="" ref="0x766ec4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766ebd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766ebd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766ea010"/>
        <function-ref name="isInput" scoped="" ref="0x766ea0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x766ea1d0"/>
        <function-ref name="toggle" scoped="" ref="0x766ea2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x766ea390"/>
        <function-ref name="getResistor" scoped="" ref="0x766ea470"/>
        <function-ref name="makeOutput" scoped="" ref="0x766ea550"/>
        <function-ref name="get" scoped="" ref="0x766ea630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766ea710"/>
        <function-ref name="getRaw" scoped="" ref="0x766ea7f0"/>
        <function-ref name="set" scoped="" ref="0x766ea8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766ea9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766eaa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766eabf0"/>
        <function-ref name="clr" scoped="" ref="0x766eacd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766e85f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766e85f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766e87d0"/>
        <function-ref name="isInput" scoped="" ref="0x766e88b0"/>
        <function-ref name="setResistor" scoped="" ref="0x766e8990"/>
        <function-ref name="toggle" scoped="" ref="0x766e8a70"/>
        <function-ref name="isOutput" scoped="" ref="0x766e8b50"/>
        <function-ref name="getResistor" scoped="" ref="0x766e8c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x766e8d10"/>
        <function-ref name="get" scoped="" ref="0x766e8df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766e8ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x766e7010"/>
        <function-ref name="set" scoped="" ref="0x766e70f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766e71d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766e72b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766e7410"/>
        <function-ref name="clr" scoped="" ref="0x766e74f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766e6e68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766e6e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766e5050"/>
        <function-ref name="isInput" scoped="" ref="0x766e5130"/>
        <function-ref name="setResistor" scoped="" ref="0x766e5210"/>
        <function-ref name="toggle" scoped="" ref="0x766e52f0"/>
        <function-ref name="isOutput" scoped="" ref="0x766e53d0"/>
        <function-ref name="getResistor" scoped="" ref="0x766e54b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x766e5590"/>
        <function-ref name="get" scoped="" ref="0x766e5670"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766e5750"/>
        <function-ref name="getRaw" scoped="" ref="0x766e5830"/>
        <function-ref name="set" scoped="" ref="0x766e5910"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766e59f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766e5ad0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766e5c30"/>
        <function-ref name="clr" scoped="" ref="0x766e5d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766e35f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766e35f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766e37d0"/>
        <function-ref name="isInput" scoped="" ref="0x766e38b0"/>
        <function-ref name="setResistor" scoped="" ref="0x766e3990"/>
        <function-ref name="toggle" scoped="" ref="0x766e3a70"/>
        <function-ref name="isOutput" scoped="" ref="0x766e3b50"/>
        <function-ref name="getResistor" scoped="" ref="0x766e3c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x766e3d10"/>
        <function-ref name="get" scoped="" ref="0x766e3df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766e3ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x766e1010"/>
        <function-ref name="set" scoped="" ref="0x766e10f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766e11d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766e12b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766e1410"/>
        <function-ref name="clr" scoped="" ref="0x766e14f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766e0d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766e0d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766df010"/>
        <function-ref name="isInput" scoped="" ref="0x766df0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x766df1d0"/>
        <function-ref name="toggle" scoped="" ref="0x766df2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x766df390"/>
        <function-ref name="getResistor" scoped="" ref="0x766df470"/>
        <function-ref name="makeOutput" scoped="" ref="0x766df550"/>
        <function-ref name="get" scoped="" ref="0x766df630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766df710"/>
        <function-ref name="getRaw" scoped="" ref="0x766df7f0"/>
        <function-ref name="set" scoped="" ref="0x766df8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766df9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766dfa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766dfbf0"/>
        <function-ref name="clr" scoped="" ref="0x766dfcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766dd5f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766dd5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766dd7d0"/>
        <function-ref name="isInput" scoped="" ref="0x766dd8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x766dd990"/>
        <function-ref name="toggle" scoped="" ref="0x766dda70"/>
        <function-ref name="isOutput" scoped="" ref="0x766ddb50"/>
        <function-ref name="getResistor" scoped="" ref="0x766ddc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x766ddd10"/>
        <function-ref name="get" scoped="" ref="0x766dddf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766dded0"/>
        <function-ref name="getRaw" scoped="" ref="0x766dc010"/>
        <function-ref name="set" scoped="" ref="0x766dc0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766dc1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766dc2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766dc410"/>
        <function-ref name="clr" scoped="" ref="0x766dc4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766dbd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766dbd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766da010"/>
        <function-ref name="isInput" scoped="" ref="0x766da0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x766da1d0"/>
        <function-ref name="toggle" scoped="" ref="0x766da2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x766da390"/>
        <function-ref name="getResistor" scoped="" ref="0x766da470"/>
        <function-ref name="makeOutput" scoped="" ref="0x766da550"/>
        <function-ref name="get" scoped="" ref="0x766da630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766da710"/>
        <function-ref name="getRaw" scoped="" ref="0x766da7f0"/>
        <function-ref name="set" scoped="" ref="0x766da8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766da9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766daa90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766dabf0"/>
        <function-ref name="clr" scoped="" ref="0x766dacd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766d85f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766d85f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766d87d0"/>
        <function-ref name="isInput" scoped="" ref="0x766d88b0"/>
        <function-ref name="setResistor" scoped="" ref="0x766d8990"/>
        <function-ref name="toggle" scoped="" ref="0x766d8a70"/>
        <function-ref name="isOutput" scoped="" ref="0x766d8b50"/>
        <function-ref name="getResistor" scoped="" ref="0x766d8c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x766d8d10"/>
        <function-ref name="get" scoped="" ref="0x766d8df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766d8ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x766d7010"/>
        <function-ref name="set" scoped="" ref="0x766d70f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766d71d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766d72b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766d7410"/>
        <function-ref name="clr" scoped="" ref="0x766d74f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766d6d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766d6d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766d5010"/>
        <function-ref name="isInput" scoped="" ref="0x766d50f0"/>
        <function-ref name="setResistor" scoped="" ref="0x766d51d0"/>
        <function-ref name="toggle" scoped="" ref="0x766d52b0"/>
        <function-ref name="isOutput" scoped="" ref="0x766d5390"/>
        <function-ref name="getResistor" scoped="" ref="0x766d5470"/>
        <function-ref name="makeOutput" scoped="" ref="0x766d5550"/>
        <function-ref name="get" scoped="" ref="0x766d5630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766d5710"/>
        <function-ref name="getRaw" scoped="" ref="0x766d57f0"/>
        <function-ref name="set" scoped="" ref="0x766d58d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766d59b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766d5a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766d5bf0"/>
        <function-ref name="clr" scoped="" ref="0x766d5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766d35f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766d35f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766d37d0"/>
        <function-ref name="isInput" scoped="" ref="0x766d38b0"/>
        <function-ref name="setResistor" scoped="" ref="0x766d3990"/>
        <function-ref name="toggle" scoped="" ref="0x766d3a70"/>
        <function-ref name="isOutput" scoped="" ref="0x766d3b50"/>
        <function-ref name="getResistor" scoped="" ref="0x766d3c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x766d3d10"/>
        <function-ref name="get" scoped="" ref="0x766d3df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766d3ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x766d2010"/>
        <function-ref name="set" scoped="" ref="0x766d20f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766d21d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766d22b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766d2410"/>
        <function-ref name="clr" scoped="" ref="0x766d24f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766d1d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766d1d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766d0010"/>
        <function-ref name="isInput" scoped="" ref="0x766d00f0"/>
        <function-ref name="setResistor" scoped="" ref="0x766d01d0"/>
        <function-ref name="toggle" scoped="" ref="0x766d02b0"/>
        <function-ref name="isOutput" scoped="" ref="0x766d0390"/>
        <function-ref name="getResistor" scoped="" ref="0x766d0470"/>
        <function-ref name="makeOutput" scoped="" ref="0x766d0550"/>
        <function-ref name="get" scoped="" ref="0x766d0630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766d0710"/>
        <function-ref name="getRaw" scoped="" ref="0x766d07f0"/>
        <function-ref name="set" scoped="" ref="0x766d08d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766d09b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766d0a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766d0bf0"/>
        <function-ref name="clr" scoped="" ref="0x766d0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766ce5f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766ce5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766ce7d0"/>
        <function-ref name="isInput" scoped="" ref="0x766ce8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x766ce990"/>
        <function-ref name="toggle" scoped="" ref="0x766cea70"/>
        <function-ref name="isOutput" scoped="" ref="0x766ceb50"/>
        <function-ref name="getResistor" scoped="" ref="0x766cec30"/>
        <function-ref name="makeOutput" scoped="" ref="0x766ced10"/>
        <function-ref name="get" scoped="" ref="0x766cedf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766ceed0"/>
        <function-ref name="getRaw" scoped="" ref="0x766cd010"/>
        <function-ref name="set" scoped="" ref="0x766cd0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766cd1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766cd2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766cd410"/>
        <function-ref name="clr" scoped="" ref="0x766cd4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766ccd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766ccd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766cb010"/>
        <function-ref name="isInput" scoped="" ref="0x766cb0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x766cb1d0"/>
        <function-ref name="toggle" scoped="" ref="0x766cb2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x766cb390"/>
        <function-ref name="getResistor" scoped="" ref="0x766cb470"/>
        <function-ref name="makeOutput" scoped="" ref="0x766cb550"/>
        <function-ref name="get" scoped="" ref="0x766cb630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766cb710"/>
        <function-ref name="getRaw" scoped="" ref="0x766cb7f0"/>
        <function-ref name="set" scoped="" ref="0x766cb8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766cb9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766cba90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766cbbf0"/>
        <function-ref name="clr" scoped="" ref="0x766cbcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766c95f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766c95f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766c97d0"/>
        <function-ref name="isInput" scoped="" ref="0x766c98b0"/>
        <function-ref name="setResistor" scoped="" ref="0x766c9990"/>
        <function-ref name="toggle" scoped="" ref="0x766c9a70"/>
        <function-ref name="isOutput" scoped="" ref="0x766c9b50"/>
        <function-ref name="getResistor" scoped="" ref="0x766c9c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x766c9d10"/>
        <function-ref name="get" scoped="" ref="0x766c9df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766c9ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x766c8010"/>
        <function-ref name="set" scoped="" ref="0x766c80f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766c81d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766c82b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766c8410"/>
        <function-ref name="clr" scoped="" ref="0x766c84f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766c7d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766c7d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766c6010"/>
        <function-ref name="isInput" scoped="" ref="0x766c60f0"/>
        <function-ref name="setResistor" scoped="" ref="0x766c61d0"/>
        <function-ref name="toggle" scoped="" ref="0x766c62b0"/>
        <function-ref name="isOutput" scoped="" ref="0x766c6390"/>
        <function-ref name="getResistor" scoped="" ref="0x766c6470"/>
        <function-ref name="makeOutput" scoped="" ref="0x766c6550"/>
        <function-ref name="get" scoped="" ref="0x766c6630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766c6710"/>
        <function-ref name="getRaw" scoped="" ref="0x766c67f0"/>
        <function-ref name="set" scoped="" ref="0x766c68d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766c69b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766c6a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766c6bf0"/>
        <function-ref name="clr" scoped="" ref="0x766c6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766c45f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766c45f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766c47d0"/>
        <function-ref name="isInput" scoped="" ref="0x766c48b0"/>
        <function-ref name="setResistor" scoped="" ref="0x766c4990"/>
        <function-ref name="toggle" scoped="" ref="0x766c4a70"/>
        <function-ref name="isOutput" scoped="" ref="0x766c4b50"/>
        <function-ref name="getResistor" scoped="" ref="0x766c4c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x766c4d10"/>
        <function-ref name="get" scoped="" ref="0x766c4df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766c4ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x766c2010"/>
        <function-ref name="set" scoped="" ref="0x766c20f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766c21d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766c22b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766c2410"/>
        <function-ref name="clr" scoped="" ref="0x766c24f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766c1d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766c1d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766c0010"/>
        <function-ref name="isInput" scoped="" ref="0x766c00f0"/>
        <function-ref name="setResistor" scoped="" ref="0x766c01d0"/>
        <function-ref name="toggle" scoped="" ref="0x766c02b0"/>
        <function-ref name="isOutput" scoped="" ref="0x766c0390"/>
        <function-ref name="getResistor" scoped="" ref="0x766c0470"/>
        <function-ref name="makeOutput" scoped="" ref="0x766c0550"/>
        <function-ref name="get" scoped="" ref="0x766c0630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766c0710"/>
        <function-ref name="getRaw" scoped="" ref="0x766c07f0"/>
        <function-ref name="set" scoped="" ref="0x766c08d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766c09b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766c0a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766c0bf0"/>
        <function-ref name="clr" scoped="" ref="0x766c0cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766be5f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766be5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766be7d0"/>
        <function-ref name="isInput" scoped="" ref="0x766be8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x766be990"/>
        <function-ref name="toggle" scoped="" ref="0x766bea70"/>
        <function-ref name="isOutput" scoped="" ref="0x766beb50"/>
        <function-ref name="getResistor" scoped="" ref="0x766bec30"/>
        <function-ref name="makeOutput" scoped="" ref="0x766bed10"/>
        <function-ref name="get" scoped="" ref="0x766bedf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766beed0"/>
        <function-ref name="getRaw" scoped="" ref="0x766bd010"/>
        <function-ref name="set" scoped="" ref="0x766bd0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766bd1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766bd2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766bd410"/>
        <function-ref name="clr" scoped="" ref="0x766bd4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766bcd68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766bcd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766bb010"/>
        <function-ref name="isInput" scoped="" ref="0x766bb0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x766bb1d0"/>
        <function-ref name="toggle" scoped="" ref="0x766bb2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x766bb390"/>
        <function-ref name="getResistor" scoped="" ref="0x766bb470"/>
        <function-ref name="makeOutput" scoped="" ref="0x766bb550"/>
        <function-ref name="get" scoped="" ref="0x766bb630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766bb710"/>
        <function-ref name="getRaw" scoped="" ref="0x766bb7f0"/>
        <function-ref name="set" scoped="" ref="0x766bb8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766bb9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766bba90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766bbbf0"/>
        <function-ref name="clr" scoped="" ref="0x766bbcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766b95f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766b95f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766b97d0"/>
        <function-ref name="isInput" scoped="" ref="0x766b98b0"/>
        <function-ref name="setResistor" scoped="" ref="0x766b9990"/>
        <function-ref name="toggle" scoped="" ref="0x766b9a70"/>
        <function-ref name="isOutput" scoped="" ref="0x766b9b50"/>
        <function-ref name="getResistor" scoped="" ref="0x766b9c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x766b9d10"/>
        <function-ref name="get" scoped="" ref="0x766b9df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766b9ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x766b8010"/>
        <function-ref name="set" scoped="" ref="0x766b80f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766b81d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766b82b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766b8410"/>
        <function-ref name="clr" scoped="" ref="0x766b84f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766b7d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766b7d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766b6010"/>
        <function-ref name="isInput" scoped="" ref="0x766b60f0"/>
        <function-ref name="setResistor" scoped="" ref="0x766b61d0"/>
        <function-ref name="toggle" scoped="" ref="0x766b62b0"/>
        <function-ref name="isOutput" scoped="" ref="0x766b6390"/>
        <function-ref name="getResistor" scoped="" ref="0x766b6470"/>
        <function-ref name="makeOutput" scoped="" ref="0x766b6550"/>
        <function-ref name="get" scoped="" ref="0x766b6630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766b6710"/>
        <function-ref name="getRaw" scoped="" ref="0x766b67f0"/>
        <function-ref name="set" scoped="" ref="0x766b68d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766b69b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766b6a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766b6bf0"/>
        <function-ref name="clr" scoped="" ref="0x766b6cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766b45f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766b45f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766b47d0"/>
        <function-ref name="isInput" scoped="" ref="0x766b48b0"/>
        <function-ref name="setResistor" scoped="" ref="0x766b4990"/>
        <function-ref name="toggle" scoped="" ref="0x766b4a70"/>
        <function-ref name="isOutput" scoped="" ref="0x766b4b50"/>
        <function-ref name="getResistor" scoped="" ref="0x766b4c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x766b4d10"/>
        <function-ref name="get" scoped="" ref="0x766b4df0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766b4ed0"/>
        <function-ref name="getRaw" scoped="" ref="0x766b3010"/>
        <function-ref name="set" scoped="" ref="0x766b30f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766b31d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766b32b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766b3410"/>
        <function-ref name="clr" scoped="" ref="0x766b34f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766b2d68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766b2d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766b1010"/>
        <function-ref name="isInput" scoped="" ref="0x766b10f0"/>
        <function-ref name="setResistor" scoped="" ref="0x766b11d0"/>
        <function-ref name="toggle" scoped="" ref="0x766b12b0"/>
        <function-ref name="isOutput" scoped="" ref="0x766b1390"/>
        <function-ref name="getResistor" scoped="" ref="0x766b1470"/>
        <function-ref name="makeOutput" scoped="" ref="0x766b1550"/>
        <function-ref name="get" scoped="" ref="0x766b1630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766b1710"/>
        <function-ref name="getRaw" scoped="" ref="0x766b17f0"/>
        <function-ref name="set" scoped="" ref="0x766b18d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766b19b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766b1a90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766b1bf0"/>
        <function-ref name="clr" scoped="" ref="0x766b1cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766af5f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766af5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766af7d0"/>
        <function-ref name="isInput" scoped="" ref="0x766af8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x766af990"/>
        <function-ref name="toggle" scoped="" ref="0x766afa70"/>
        <function-ref name="isOutput" scoped="" ref="0x766afb50"/>
        <function-ref name="getResistor" scoped="" ref="0x766afc30"/>
        <function-ref name="makeOutput" scoped="" ref="0x766afd10"/>
        <function-ref name="get" scoped="" ref="0x766afdf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766afed0"/>
        <function-ref name="getRaw" scoped="" ref="0x766ae010"/>
        <function-ref name="set" scoped="" ref="0x766ae0f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766ae1d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766ae2b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766ae410"/>
        <function-ref name="clr" scoped="" ref="0x766ae4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766add68" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766add68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766ac010"/>
        <function-ref name="isInput" scoped="" ref="0x766ac0f0"/>
        <function-ref name="setResistor" scoped="" ref="0x766ac1d0"/>
        <function-ref name="toggle" scoped="" ref="0x766ac2b0"/>
        <function-ref name="isOutput" scoped="" ref="0x766ac390"/>
        <function-ref name="getResistor" scoped="" ref="0x766ac470"/>
        <function-ref name="makeOutput" scoped="" ref="0x766ac550"/>
        <function-ref name="get" scoped="" ref="0x766ac630"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766ac710"/>
        <function-ref name="getRaw" scoped="" ref="0x766ac7f0"/>
        <function-ref name="set" scoped="" ref="0x766ac8d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766ac9b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766aca90"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766acbf0"/>
        <function-ref name="clr" scoped="" ref="0x766accd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x766aa5f8" loc="47:../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x766aa5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766aa7d0"/>
        <function-ref name="isInput" scoped="" ref="0x766aa8b0"/>
        <function-ref name="setResistor" scoped="" ref="0x766aa990"/>
        <function-ref name="toggle" scoped="" ref="0x766aaa70"/>
        <function-ref name="isOutput" scoped="" ref="0x766aab50"/>
        <function-ref name="getResistor" scoped="" ref="0x766aac30"/>
        <function-ref name="makeOutput" scoped="" ref="0x766aad10"/>
        <function-ref name="get" scoped="" ref="0x766aadf0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x766aaed0"/>
        <function-ref name="getRaw" scoped="" ref="0x766a9010"/>
        <function-ref name="set" scoped="" ref="0x766a90f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766a91d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766a92b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x766a9410"/>
        <function-ref name="clr" scoped="" ref="0x766a94f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x76675c48" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x76675c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76675e20"/>
        <function-ref name="isInput" scoped="" ref="0x76675f00"/>
        <function-ref name="setResistor" scoped="" ref="0x76674010"/>
        <function-ref name="toggle" scoped="" ref="0x766740f0"/>
        <function-ref name="isOutput" scoped="" ref="0x766741d0"/>
        <function-ref name="getResistor" scoped="" ref="0x766742b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76674390"/>
        <function-ref name="get" scoped="" ref="0x76674470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76674550"/>
        <function-ref name="getRaw" scoped="" ref="0x76674630"/>
        <function-ref name="set" scoped="" ref="0x76674710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766747f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766748d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76674a30"/>
        <function-ref name="clr" scoped="" ref="0x76674b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x766752d0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x766752d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x766754a8"/>
        <function-ref name="isInput" scoped="" ref="0x76675588"/>
        <function-ref name="toggle" scoped="" ref="0x76675668"/>
        <function-ref name="isOutput" scoped="" ref="0x76675748"/>
        <function-ref name="get" scoped="" ref="0x76675828"/>
        <function-ref name="makeOutput" scoped="" ref="0x76675908"/>
        <function-ref name="set" scoped="" ref="0x766759e8"/>
        <function-ref name="clr" scoped="" ref="0x76675ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x76668430" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x76668430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76668608"/>
        <function-ref name="isInput" scoped="" ref="0x766686e8"/>
        <function-ref name="setResistor" scoped="" ref="0x766687c8"/>
        <function-ref name="toggle" scoped="" ref="0x766688a8"/>
        <function-ref name="isOutput" scoped="" ref="0x76668988"/>
        <function-ref name="getResistor" scoped="" ref="0x76668a68"/>
        <function-ref name="makeOutput" scoped="" ref="0x76668b48"/>
        <function-ref name="get" scoped="" ref="0x76668c28"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76668d08"/>
        <function-ref name="getRaw" scoped="" ref="0x76668de8"/>
        <function-ref name="set" scoped="" ref="0x76668ec8"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x76667010"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766670f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76667250"/>
        <function-ref name="clr" scoped="" ref="0x76667330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7666aa70" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7666aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7666ac48"/>
        <function-ref name="isInput" scoped="" ref="0x7666ad28"/>
        <function-ref name="toggle" scoped="" ref="0x7666ae08"/>
        <function-ref name="isOutput" scoped="" ref="0x7666aee8"/>
        <function-ref name="get" scoped="" ref="0x76668010"/>
        <function-ref name="makeOutput" scoped="" ref="0x766680f0"/>
        <function-ref name="set" scoped="" ref="0x766681d0"/>
        <function-ref name="clr" scoped="" ref="0x766682b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x76666c18" loc="44:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x76666c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76666df0"/>
        <function-ref name="isInput" scoped="" ref="0x76666ed0"/>
        <function-ref name="setResistor" scoped="" ref="0x76665010"/>
        <function-ref name="toggle" scoped="" ref="0x766650f0"/>
        <function-ref name="isOutput" scoped="" ref="0x766651d0"/>
        <function-ref name="getResistor" scoped="" ref="0x766652b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x76665390"/>
        <function-ref name="get" scoped="" ref="0x76665470"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x76665550"/>
        <function-ref name="getRaw" scoped="" ref="0x76665630"/>
        <function-ref name="set" scoped="" ref="0x76665710"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x766657f0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x766658d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x76665a30"/>
        <function-ref name="clr" scoped="" ref="0x76665b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x766662a0" loc="43:../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x766662a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x76666478"/>
        <function-ref name="isInput" scoped="" ref="0x76666558"/>
        <function-ref name="toggle" scoped="" ref="0x76666638"/>
        <function-ref name="isOutput" scoped="" ref="0x76666718"/>
        <function-ref name="get" scoped="" ref="0x766667f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x766668d8"/>
        <function-ref name="set" scoped="" ref="0x766669b8"/>
        <function-ref name="clr" scoped="" ref="0x76666a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x766600a0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x766600a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7665ab88"/>
        <function-ref name="fired" scoped="" ref="0x76660e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7665a548"/>
        <function-ref name="isOneShot" scoped="" ref="0x7665a2f0"/>
        <function-ref name="getdt" scoped="" ref="0x7656f048"/>
        <function-ref name="gett0" scoped="" ref="0x7665ade0"/>
        <function-ref name="isRunning" scoped="" ref="0x7665a098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x766606c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7665a868"/>
        <function-ref name="startOneShot" scoped="" ref="0x76660948"/>
        <function-ref name="stop" scoped="" ref="0x76660bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x76659190" loc="49:../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x76659190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x76658c70"/>
        <function-ref name="fired" scoped="" ref="0x76659f10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x76658630"/>
        <function-ref name="isOneShot" scoped="" ref="0x766583d8"/>
        <function-ref name="getdt" scoped="" ref="0x76657150"/>
        <function-ref name="gett0" scoped="" ref="0x76658ec8"/>
        <function-ref name="isRunning" scoped="" ref="0x76658180"/>
        <function-ref name="startPeriodic" scoped="" ref="0x766597b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x76658950"/>
        <function-ref name="startOneShot" scoped="" ref="0x76659a38"/>
        <function-ref name="stop" scoped="" ref="0x76659cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x76653200" loc="46:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x76653200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x76652d58"/>
        <function-ref name="fired" scoped="" ref="0x76652010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x76652718"/>
        <function-ref name="isOneShot" scoped="" ref="0x766524c0"/>
        <function-ref name="getdt" scoped="" ref="0x76651268"/>
        <function-ref name="gett0" scoped="" ref="0x76651010"/>
        <function-ref name="isRunning" scoped="" ref="0x76652268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x76653828"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x76652a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x76653aa8"/>
        <function-ref name="stop" scoped="" ref="0x76653d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7664d310" loc="47:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7664d310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7664d958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x76657a08" loc="45:../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x76657a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x76657be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7664e468" loc="44:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7664e468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x765c6940"/>
        <function-ref name="fired" scoped="" ref="0x765c6110"/>
        <function-ref name="startAt" scoped="" ref="0x765c6600"/>
        <function-ref name="isRunning" scoped="" ref="0x765c6388"/>
        <function-ref name="getAlarm" scoped="" ref="0x765c6bb8"/>
        <function-ref name="start" scoped="" ref="0x7664ebb8"/>
        <function-ref name="stop" scoped="" ref="0x7664ee58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7664e010" loc="43:../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7664e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7664e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x762cc4f8" loc="44:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x762cc4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6ed38"/>
            <typename><typedef-ref name="T32khz" ref="0x76b6ef18"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x762cb9d0"/>
        <function-ref name="fired" scoped="" ref="0x762cb1a0"/>
        <function-ref name="startAt" scoped="" ref="0x762cb690"/>
        <function-ref name="isRunning" scoped="" ref="0x762cb418"/>
        <function-ref name="getAlarm" scoped="" ref="0x762cbc48"/>
        <function-ref name="start" scoped="" ref="0x762ccc48"/>
        <function-ref name="stop" scoped="" ref="0x762ccee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x762cc0a0" loc="43:../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x762cc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x762cc278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x762bf4f0" loc="41:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x762bf4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x762bf6c8"/>
        <function-ref name="setEvent" scoped="" ref="0x762bf7a8"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x762bf888"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x762bf968"/>
        <function-ref name="fired" scoped="" ref="0x762bfa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x762c2de0" loc="39:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x762c2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x762c0010"/>
        <function-ref name="setClockSource" scoped="" ref="0x762c00f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x762c01d0"/>
        <function-ref name="get" scoped="" ref="0x762c02b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x762c0390"/>
        <function-ref name="clearOverflow" scoped="" ref="0x762c0470"/>
        <function-ref name="getMode" scoped="" ref="0x762c0550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x762c0630"/>
        <function-ref name="overflow" scoped="" ref="0x762c0710"/>
        <function-ref name="setMode" scoped="" ref="0x762c07f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x762c08d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x762c0a30" loc="40:../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x762c0a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x762c0c08"/>
        <function-ref name="getControl" scoped="" ref="0x762c0ce8"/>
        <function-ref name="enableEvents" scoped="" ref="0x762c0dc8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x762c0ea8"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x762bf010"/>
        <function-ref name="disableEvents" scoped="" ref="0x762bf0f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x762bf1d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x762bf2b0"/>
        <function-ref name="setControl" scoped="" ref="0x762bf390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x76638bd8" loc="52:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x76638bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x76638db0"/>
        <function-ref name="setEvent" scoped="" ref="0x76638e90"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x76636010"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x766360f0"/>
        <function-ref name="fired" scoped="" ref="0x766361d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7663ce18" loc="50:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7663ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x76639010"/>
        <function-ref name="setClockSource" scoped="" ref="0x766390f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x766391d0"/>
        <function-ref name="get" scoped="" ref="0x766392b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x76639390"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76639470"/>
        <function-ref name="getMode" scoped="" ref="0x76639550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76639630"/>
        <function-ref name="overflow" scoped="" ref="0x76639710"/>
        <function-ref name="setMode" scoped="" ref="0x766397f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x766398d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x76639dc8" loc="51:../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x76639dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x76638010"/>
        <function-ref name="getControl" scoped="" ref="0x766380f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x766381d0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x766382b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x76638390"/>
        <function-ref name="disableEvents" scoped="" ref="0x76638470"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x76638550"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x76638630"/>
        <function-ref name="setControl" scoped="" ref="0x76638710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x762bbe48" loc="49:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x762bbe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x762ba050"/>
        <function-ref name="setEvent" scoped="" ref="0x762ba130"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x762ba210"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x762ba2f0"/>
        <function-ref name="fired" scoped="" ref="0x762ba3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x762bc7f8" loc="47:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x762bc7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x762bc9d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x762bcab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x762bcb90"/>
        <function-ref name="get" scoped="" ref="0x762bcc70"/>
        <function-ref name="disableEvents" scoped="" ref="0x762bcd50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x762bce30"/>
        <function-ref name="getMode" scoped="" ref="0x762bcf10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x762bb010"/>
        <function-ref name="overflow" scoped="" ref="0x762bb0f0"/>
        <function-ref name="setMode" scoped="" ref="0x762bb1d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x762bb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x762bee20" loc="46:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x762bee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6ed38"/>
            <typename><typedef-ref name="T32khz" ref="0x76b6ef18"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x762bc350"/>
        <function-ref name="fired" scoped="" ref="0x762bdaa8"/>
        <function-ref name="startAt" scoped="" ref="0x762bc010"/>
        <function-ref name="isRunning" scoped="" ref="0x762bdd20"/>
        <function-ref name="getAlarm" scoped="" ref="0x762bc5c8"/>
        <function-ref name="start" scoped="" ref="0x762bd590"/>
        <function-ref name="stop" scoped="" ref="0x762bd830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x762be9a8" loc="45:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x762be9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x762beb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x762bb410" loc="48:../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x762bb410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x762bb5e8"/>
        <function-ref name="getControl" scoped="" ref="0x762bb6c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x762bb7a8"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x762bb888"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x762bb968"/>
        <function-ref name="disableEvents" scoped="" ref="0x762bba48"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x762bbb28"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x762bbc08"/>
        <function-ref name="setControl" scoped="" ref="0x762bbce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x76609960" loc="43:../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x76609960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7660c0d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7660c5c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7660c350"/>
        <function-ref name="overflow" scoped="" ref="0x7660c840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x76606490" loc="43:../../tos/chips/msp430/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x76606490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6ed38"/>
            <typename><typedef-ref name="T32khz" ref="0x76b6ef18"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x76606be0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76605110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76606e58"/>
        <function-ref name="overflow" scoped="" ref="0x76605388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x765fb010" loc="45:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x765fb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x765fb1e8"/>
        <function-ref name="setClockSource" scoped="" ref="0x765fb2c8"/>
        <function-ref name="enableEvents" scoped="" ref="0x765fb3a8"/>
        <function-ref name="get" scoped="" ref="0x765fb488"/>
        <function-ref name="disableEvents" scoped="" ref="0x765fb568"/>
        <function-ref name="clearOverflow" scoped="" ref="0x765fb648"/>
        <function-ref name="getMode" scoped="" ref="0x765fb728"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x765fb808"/>
        <function-ref name="overflow" scoped="" ref="0x765fb8e8"/>
        <function-ref name="setMode" scoped="" ref="0x765fb9c8"/>
        <function-ref name="setInputDivider" scoped="" ref="0x765fbaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x765fce90" loc="44:../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x765fce90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6ed38"/>
            <typename><typedef-ref name="T32khz" ref="0x76b6ef18"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x76603600"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76603af0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76603878"/>
        <function-ref name="overflow" scoped="" ref="0x76603d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x765e8268" loc="63:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x765e8268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6ed38"/>
            <typename><typedef-ref name="T32khz" ref="0x76b6ef18"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x765e89b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x765e8ea8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x765e8c30"/>
        <function-ref name="overflow" scoped="" ref="0x765e7150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x765f9010" loc="62:../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x765f9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x765f9760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x765f9c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x765f99d8"/>
        <function-ref name="overflow" scoped="" ref="0x765f9ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x762c9010" loc="61:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x762c9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x762c84e0"/>
        <function-ref name="fired" scoped="" ref="0x762c9c78"/>
        <function-ref name="startAt" scoped="" ref="0x762c81a0"/>
        <function-ref name="isRunning" scoped="" ref="0x762c9ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x762c8758"/>
        <function-ref name="start" scoped="" ref="0x762c9760"/>
        <function-ref name="stop" scoped="" ref="0x762c9a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x762c6d00" loc="73:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x762c6d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6ed38"/>
            <typename><typedef-ref name="T32khz" ref="0x76b6ef18"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x762c41e8"/>
        <function-ref name="fired" scoped="" ref="0x762c5990"/>
        <function-ref name="startAt" scoped="" ref="0x762c5e80"/>
        <function-ref name="isRunning" scoped="" ref="0x762c5c08"/>
        <function-ref name="getAlarm" scoped="" ref="0x762c4460"/>
        <function-ref name="start" scoped="" ref="0x762c5478"/>
        <function-ref name="stop" scoped="" ref="0x762c5718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x762c8aa8" loc="68:../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x762c8aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x762c6228"/>
        <function-ref name="clearOverflow" scoped="" ref="0x762c6718"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x762c64a0"/>
        <function-ref name="overflow" scoped="" ref="0x762c6990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x765aad08" loc="74:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x765aad08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x765aaee0"/>
        <function-ref name="runTask" scoped="" ref="0x765a8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x765ab360" loc="49:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x765ab360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x765aa840"/>
        <function-ref name="fired" scoped="" ref="0x765aa010"/>
        <function-ref name="startAt" scoped="" ref="0x765aa500"/>
        <function-ref name="isRunning" scoped="" ref="0x765aa288"/>
        <function-ref name="getAlarm" scoped="" ref="0x765aaab8"/>
        <function-ref name="start" scoped="" ref="0x765abab0"/>
        <function-ref name="stop" scoped="" ref="0x765abd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x765c2010" loc="48:../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x765c2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x765acb00"/>
        <function-ref name="fired" scoped="" ref="0x765c2d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x765ac4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x765ac268"/>
        <function-ref name="getdt" scoped="" ref="0x765ab010"/>
        <function-ref name="gett0" scoped="" ref="0x765acd58"/>
        <function-ref name="isRunning" scoped="" ref="0x765ac010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x765c2638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x765ac7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x765c28b8"/>
        <function-ref name="stop" scoped="" ref="0x765c2b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7657b948" loc="71:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7657b948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7657bb20"/>
        <function-ref name="runTask" scoped="" ref="0x7657bc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7657e6f0" loc="49:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7657e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7657b248"/>
        <function-ref name="fired" scoped="" ref="0x7657d4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7657dbf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7657d998"/>
        <function-ref name="getdt" scoped="" ref="0x7657b6f8"/>
        <function-ref name="gett0" scoped="" ref="0x7657b4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7657d740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7657ed18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7657df10"/>
        <function-ref name="startOneShot" scoped="" ref="0x7657d010"/>
        <function-ref name="stop" scoped="" ref="0x7657d290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x765a6390" loc="48:../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x765a6390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x76580f18"/>
        <function-ref name="fired" scoped="" ref="0x76580180"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x765808b8"/>
        <function-ref name="isOneShot" scoped="" ref="0x76580650"/>
        <function-ref name="getdt" scoped="" ref="0x7657e400"/>
        <function-ref name="gett0" scoped="" ref="0x7657e198"/>
        <function-ref name="isRunning" scoped="" ref="0x765803e8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x765a69c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x76580be8"/>
        <function-ref name="startOneShot" scoped="" ref="0x765a6c58"/>
        <function-ref name="stop" scoped="" ref="0x765a6ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x76573d80" loc="48:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x76573d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x765793e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x76579730" loc="49:../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x76579730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x76579e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x76578388"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x76578110"/>
        <function-ref name="overflow" scoped="" ref="0x76578600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7656fe00" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7656fe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7656d900"/>
        <function-ref name="fired" scoped="" ref="0x7656eba0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7656d2c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7656d068"/>
        <function-ref name="getdt" scoped="" ref="0x7656ddb0"/>
        <function-ref name="gett0" scoped="" ref="0x7656db58"/>
        <function-ref name="isRunning" scoped="" ref="0x7656edf8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7656e448"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7656d5e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7656e6c8"/>
        <function-ref name="stop" scoped="" ref="0x7656e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7656cbd0" loc="45:../../tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7656cbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x76b6e8e0"/>
            <typename><typedef-ref name="TMilli" ref="0x76b6eac0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x765696d8"/>
        <function-ref name="fired" scoped="" ref="0x7656b970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x76569098"/>
        <function-ref name="isOneShot" scoped="" ref="0x7656be20"/>
        <function-ref name="getdt" scoped="" ref="0x76569b88"/>
        <function-ref name="gett0" scoped="" ref="0x76569930"/>
        <function-ref name="isRunning" scoped="" ref="0x7656bbc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7656b218"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x765693b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7656b498"/>
        <function-ref name="stop" scoped="" ref="0x7656b718"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../tos/interfaces/Init.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x768d52a8" loc="62:../../tos/interfaces/Init.nc">
        <documentation loc="53:../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b73220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x768d9728" loc="60:../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x768b9ac0" loc="48:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x768bba58" loc="43:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x768b96c0" loc="47:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x768bb6a0" loc="42:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x768bbea0" loc="45:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x768c0f18" loc="40:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x768bb2e8" loc="41:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x768b92c0" loc="46:../../tos/chips/msp430/timer/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x768e62a0" loc="62:../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x76b09790"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x76889b40" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="49:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; Msp430Timer.h has convenience definitions:&#10; MSP430TIMER_CM_NONE, MSP430TIMER_CM_RISING, MSP430TIMER_CM_FALLING, MSP430TIMER_CM_BOTH&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x768899e8" loc="55:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7688a278" loc="42:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x768b44e0"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x768b4cd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x76888090" loc="57:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x768888d0" loc="59:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x76889598" loc="47:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x76888488" loc="58:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7688a6d0" loc="43:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7688ab18" loc="44:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x76889168" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x768b44e0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x768b4cd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x76889010" loc="46:../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x768b44e0"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x768b4cd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="39:../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x768867b8" loc="44:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="41:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x76880db0" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="70:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x76880c58" loc="79:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7687e638" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="81:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7687e4e0" loc="86:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x768807b0" loc="68:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="65:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x76880310" loc="63:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="58:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x76886d20" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="46:../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x76886bc8" loc="56:../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="38:../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x76885378" loc="40:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x768858d0" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x76885778" loc="41:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x76885e80" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x76885d28" loc="42:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x76883440" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x768832e8" loc="43:../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x768837e8" loc="45:../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7688e8e8" loc="52:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7688d6c8" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7688d570" loc="55:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7688ecd8" loc="53:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7688f070" loc="45:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7688d0f8" loc="54:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7688f8b8" loc="47:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7688e540" loc="51:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7688f4c0" loc="46:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7688fc80" loc="48:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7688e188" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7688e030" loc="50:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7688dcb0" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7688db58" loc="56:../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x76cf4310"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7686a480" loc="39:../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:../../tos/interfaces/McuSleep.nc">
      <documentation loc="63:../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x768fbcb8" loc="76:../../tos/interfaces/McuSleep.nc">
        <documentation loc="75:../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7697b408" loc="52:../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x76b78f10" loc="57:../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x76b76838" loc="72:../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x76b76370" loc="65:../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x76b6f800" loc="67:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b73220"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x76b6fd18" loc="75:../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x767cdd10" loc="53:../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x767cdd10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x767c5520" loc="136:../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x767c72c8" loc="83:../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x767c6460" loc="114:../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x767c6118" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x767c6300" loc="114:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x767c7c18" loc="98:../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x767c5e98" loc="151:../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x767c5968" loc="144:../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x767c7758" loc="92:../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x767c9388" loc="64:../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x767c9230" loc="64:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x767c6e48" loc="129:../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x767c6b00" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x767c6ce8" loc="129:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x767c9a20" loc="73:../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x767c98c8" loc="73:../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x767c9ef0" loc="78:../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x767baec8" loc="61:../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x767b8360" loc="67:../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x767b87e0" loc="72:../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x767b7070" loc="83:../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x767b7d60" loc="100:../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x767b6230" loc="117:../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x767b8c08" loc="77:../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x767b6970" loc="134:../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x767b6818" loc="134:../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x767baaa0" loc="56:../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x767b74f0" loc="89:../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x767b7918" loc="94:../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x767a95a8" loc="44:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x767a9990" loc="45:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x767ade00" loc="42:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x767a81a8" loc="47:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x767a91d8" loc="43:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x767a9d68" loc="46:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x767ad6c0" loc="40:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x767ada50" loc="41:../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="43:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x767907e8" loc="78:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="75:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
          <long>&#10; Set pin direction to input.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x76790c10" loc="80:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7678ebb8" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="103:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x76b73220"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7678ea60" loc="110:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x76792a60" loc="58:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="55:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7678f448" loc="87:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7678d158" loc="117:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="112:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7678f010" loc="85:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
          <long>&#10; Set pin direction to output.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x767903a8" loc="73:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="68:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7678e138" loc="99:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="96:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x76792e98" loc="66:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="60:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x76cf40f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x767922a0" loc="48:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="45:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7678f870" loc="92:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="89:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7678e580" loc="101:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7678fcf0" loc="94:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x76792670" loc="53:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="50:../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x76651a80" loc="53:../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x76651a80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7664d010" loc="61:../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x76cf4550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7664cc40" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7664cc40"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7664cda8" loc="56:../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7664cda8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x76647070" loc="109:../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7664cda8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x76649d28" loc="78:../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x76648a00" loc="103:../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7664cda8"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7664cda8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x766486b0" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7664cda8"/></type-var>
          </variable>
          <variable name="dt" ref="0x766488a0" loc="103:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7664cda8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x766481a8" loc="88:../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x76647500" loc="116:../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7664cda8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x766493e8" loc="66:../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7664cda8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x76649290" loc="66:../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7664cda8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x766498c8" loc="73:../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7660a0c0" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7660a0c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7660a228" loc="57:../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7660a228"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7660a710" loc="64:../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7660a228"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x76609158" loc="76:../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7660ac38" loc="71:../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x76b79388"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x76609580" loc="82:../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
