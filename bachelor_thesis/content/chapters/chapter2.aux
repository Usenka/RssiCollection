\relax 
\providecommand\hyper@newdestlabel[2]{}
\citation{Wsn}
\citation{Tinyos}
\citation{RtiMulti}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Materials and Methods}{5}{chapter.2}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{lol}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {2.1}Wireless Sensor Networks}{5}{section.2.1}}
\@writefile{toc}{\contentsline {section}{\numberline {2.2}Radio Tomographic Imaging}{5}{section.2.2}}
\citation{RtiMulti}
\citation{RtiMulti}
\citation{RtiMulti}
\citation{RtiMulti}
\citation{RtiMulti}
\@writefile{toc}{\contentsline {section}{\numberline {2.3}Multi-Spin}{6}{section.2.3}}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 2.1}{\ignorespaces Time is devided into $slots$ and $cycles$. A $cycle$ is the time all the nodes need to send their message. A $cycle$ is then devided by the number of nodes to create a $slot$ for each node where it can send its message. \cite  {RtiMulti}\relax }}{6}{figure.caption.3}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:multi}{{\relax 2.1}{6}{Time is devided into $slots$ and $cycles$. A $cycle$ is the time all the nodes need to send their message. A $cycle$ is then devided by the number of nodes to create a $slot$ for each node where it can send its message. \cite {RtiMulti}\relax }{figure.caption.3}{}}
\citation{CTP}
\@writefile{toc}{\contentsline {section}{\numberline {2.4}Collection Tree Protocol}{7}{section.2.4}}
\@writefile{toc}{\contentsline {section}{\numberline {2.5}Wireles Sonsor Network Testbed}{7}{section.2.5}}
\newlabel{chp:mat_testbed}{{2.5}{7}{Wireles Sonsor Network Testbed}{section.2.5}{}}
\citation{Telosb}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 2.2}{\ignorespaces Floor plan of the area where the testbed is located. The position of the nodes is shown by the numbered antennas.\relax }}{8}{figure.caption.4}}
\newlabel{fig:testbed}{{\relax 2.2}{8}{Floor plan of the area where the testbed is located. The position of the nodes is shown by the numbered antennas.\relax }{figure.caption.4}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5.1}TelosB Mote}{8}{subsection.2.5.1}}
\newlabel{chp:TelosB}{{2.5.1}{8}{TelosB Mote}{subsection.2.5.1}{}}
\citation{Telosb}
\citation{Telosb}
\@writefile{lof}{\contentsline {figure}{\numberline {\relax 2.3}{\ignorespaces The structure of the Crossbow TelosB Mote and the included components \cite  {Telosb}\relax }}{9}{figure.caption.5}}
\newlabel{fig:telosb}{{\relax 2.3}{9}{The structure of the Crossbow TelosB Mote and the included components \cite {Telosb}\relax }{figure.caption.5}{}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.5.2}TinyOS}{9}{subsection.2.5.2}}
\citation{Tinyos}
\citation{Tinyos}
\citation{TinyosT}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {2.5.2.1}Programming for TinyOS}{10}{subsubsection.2.5.2.1}}
\newlabel{lis:Components}{{2.1}{11}{Two example components. $MainComponent$ uses the example interface ExampleI from \ref {lis:interface} and the interface $Boot$ that TinyOS provides. $Boot$ requires the $MainComponent$ to implement the $Boot.booted()$ event that is the first event that gets signalled by TinyOS after the node booted. The $ExampleC$ provides the example interface and therefore needs to implement the event and also implements a task $doSomething()$}{lstlisting.2.1}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2.1}Two example components. $MainComponent$ uses the example interface ExampleI from \ref  {lis:interface} and the interface $Boot$ that TinyOS provides. $Boot$ requires the $MainComponent$ to implement the $Boot.booted()$ event that is the first event that gets signalled by TinyOS after the node booted. The $ExampleC$ provides the example interface and therefore needs to implement the event and also implements a task $doSomething()$.}{11}{lstlisting.2.1}}
\newlabel{lis:interface}{{2.2}{11}{Example interface providing a command $startExample()$ and an event $exampleDone()$}{lstlisting.2.2}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2.2}Example interface providing a command $startExample()$ and an event $exampleDone()$.}{11}{lstlisting.2.2}}
\newlabel{lis:configuration}{{2.3}{12}{The configuration $Application$ links all the Components}{lstlisting.2.3}{}}
\@writefile{lol}{\contentsline {lstlisting}{\numberline {2.3}The configuration $Application$ links all the Components}{12}{lstlisting.2.3}}
\@setckpt{content/chapters/chapter2}{
\setcounter{page}{13}
\setcounter{equation}{0}
\setcounter{enumi}{0}
\setcounter{enumii}{0}
\setcounter{enumiii}{0}
\setcounter{enumiv}{0}
\setcounter{footnote}{0}
\setcounter{mpfootnote}{0}
\setcounter{part}{0}
\setcounter{chapter}{2}
\setcounter{section}{5}
\setcounter{subsection}{2}
\setcounter{subsubsection}{1}
\setcounter{paragraph}{0}
\setcounter{subparagraph}{0}
\setcounter{figure}{3}
\setcounter{table}{0}
\setcounter{ContinuedFloat}{0}
\setcounter{subfigure}{0}
\setcounter{subtable}{0}
\setcounter{lstnumber}{10}
\setcounter{Item}{0}
\setcounter{Hfootnote}{0}
\setcounter{bookmark@seq@number}{12}
\setcounter{lstlisting}{3}
\setcounter{section@level}{3}
}
